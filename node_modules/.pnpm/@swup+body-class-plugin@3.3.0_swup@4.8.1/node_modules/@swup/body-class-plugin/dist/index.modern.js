import t from"@swup/plugin";function e(){return e=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var s=arguments[e];for(var n in s)Object.prototype.hasOwnProperty.call(s,n)&&(t[n]=s[n])}return t},e.apply(this,arguments)}function s(t,{prefix:e=""}={}){return!!t&&t.startsWith(e)}function n(t,e=[]){const s=Array.from(t.attributes);return e.length?s.filter(({name:t})=>e.some(e=>e instanceof RegExp?e.test(t):t===e)):s}class o extends t{constructor(t={}){super(),this.name="SwupBodyClassPlugin",this.requires={swup:">=4.6"},this.defaults={prefix:"",attributes:[]},this.options=void 0,this.update=t=>{const{prefix:e,attributes:o}=this.options;!function(t,e,{prefix:n=""}={}){const o=[...t.classList].filter(t=>s(t,{prefix:n})),i=[...e.classList].filter(t=>s(t,{prefix:n}));t.classList.remove(...o),t.classList.add(...i)}(document.body,t.to.document.body,{prefix:e}),null!=o&&o.length&&function(t,e,s=[]){const o=new Set;for(const{name:i,value:r}of n(e,s))t.setAttribute(i,r),o.add(i);for(const{name:e}of n(t,s))o.has(e)||t.removeAttribute(e)}(document.body,t.to.document.body,o)},this.options=e({},this.defaults,t)}mount(){this.on("content:replace",this.update)}}export{o as default};
//# sourceMappingURL=index.modern.js.map
