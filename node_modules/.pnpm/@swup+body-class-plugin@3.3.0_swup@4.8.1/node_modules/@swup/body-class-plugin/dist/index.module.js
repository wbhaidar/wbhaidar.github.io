import t from"@swup/plugin";function s(t,{prefix:s=""}={}){return!!t&&t.startsWith(s)}function e(t,s=[]){const e=Array.from(t.attributes);return s.length?e.filter(({name:t})=>s.some(s=>s instanceof RegExp?s.test(t):t===s)):e}class o extends t{constructor(t={}){super(),this.name="SwupBodyClassPlugin",this.requires={swup:">=4.6"},this.defaults={prefix:"",attributes:[]},this.options=void 0,this.update=t=>{const{prefix:o,attributes:i}=this.options;!function(t,e,{prefix:o=""}={}){const i=[...t.classList].filter(t=>s(t,{prefix:o})),n=[...e.classList].filter(t=>s(t,{prefix:o}));t.classList.remove(...i),t.classList.add(...n)}(document.body,t.to.document.body,{prefix:o}),i?.length&&function(t,s,o=[]){const i=new Set;for(const{name:n,value:r}of e(s,o))t.setAttribute(n,r),i.add(n);for(const{name:s}of e(t,o))i.has(s)||t.removeAttribute(s)}(document.body,t.to.document.body,i)},this.options={...this.defaults,...t}}mount(){this.on("content:replace",this.update)}}export{o as default};
//# sourceMappingURL=index.module.js.map
