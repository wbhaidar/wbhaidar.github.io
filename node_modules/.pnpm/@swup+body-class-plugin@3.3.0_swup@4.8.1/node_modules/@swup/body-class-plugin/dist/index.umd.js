!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t||self).SwupBodyClassPlugin=e()}(this,function(){function t(){return t=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t},t.apply(this,arguments)}const e=t=>String(t).split(".").map(t=>String(parseInt(t||"0",10))).concat(["0","0"]).slice(0,3).join(".");class n{constructor(){this.isSwupPlugin=!0,this.swup=void 0,this.version=void 0,this.requires={},this.handlersToUnregister=[]}mount(){}unmount(){this.handlersToUnregister.forEach(t=>t()),this.handlersToUnregister=[]}_beforeMount(){if(!this.name)throw new Error("You must define a name of plugin when creating a class.")}_afterUnmount(){}_checkRequirements(){return"object"!=typeof this.requires||Object.entries(this.requires).forEach(([t,n])=>{if(!function(t,n,r){const s=function(t,e){var n;if("swup"===t)return null!=(n=e.version)?n:"";{var r;const n=e.findPlugin(t);return null!=(r=null==n?void 0:n.version)?r:""}}(t,r);return!!s&&((t,n)=>n.every(n=>{const[,r,s]=n.match(/^([\D]+)?(.*)$/)||[];var o,i;return((t,e)=>{const n={"":t=>0===t,">":t=>t>0,">=":t=>t>=0,"<":t=>t<0,"<=":t=>t<=0};return(n[e]||n[""])(t)})((i=s,o=e(o=t),i=e(i),o.localeCompare(i,void 0,{numeric:!0})),r||">=")}))(s,n)}(t,n=Array.isArray(n)?n:[n],this.swup)){const e=`${t} ${n.join(", ")}`;throw new Error(`Plugin version mismatch: ${this.name} requires ${e}`)}}),!0}on(t,e,n={}){var r;e=!(r=e).name.startsWith("bound ")||r.hasOwnProperty("prototype")?e.bind(this):e;const s=this.swup.hooks.on(t,e,n);return this.handlersToUnregister.push(s),s}once(e,n,r={}){return this.on(e,n,t({},r,{once:!0}))}before(e,n,r={}){return this.on(e,n,t({},r,{before:!0}))}replace(e,n,r={}){return this.on(e,n,t({},r,{replace:!0}))}off(t,e){return this.swup.hooks.off(t,e)}}function r(t,e){let{prefix:n=""}=void 0===e?{}:e;return!!t&&t.startsWith(n)}function s(t,e){void 0===e&&(e=[]);const n=Array.from(t.attributes);return e.length?n.filter(t=>{let{name:n}=t;return e.some(t=>t instanceof RegExp?t.test(n):n===t)}):n}return class extends n{constructor(t){void 0===t&&(t={}),super(),this.name="SwupBodyClassPlugin",this.requires={swup:">=4.6"},this.defaults={prefix:"",attributes:[]},this.options=void 0,this.update=t=>{const{prefix:e,attributes:n}=this.options;!function(t,e,n){let{prefix:s=""}=void 0===n?{}:n;const o=[...t.classList].filter(t=>r(t,{prefix:s})),i=[...e.classList].filter(t=>r(t,{prefix:s}));t.classList.remove(...o),t.classList.add(...i)}(document.body,t.to.document.body,{prefix:e}),n?.length&&function(t,e,n){void 0===n&&(n=[]);const r=new Set;for(const{name:o,value:i}of s(e,n))t.setAttribute(o,i),r.add(o);for(const{name:e}of s(t,n))r.has(e)||t.removeAttribute(e)}(document.body,t.to.document.body,n)},this.options={...this.defaults,...t}}mount(){this.on("content:replace",this.update)}}});
//# sourceMappingURL=index.umd.js.map
