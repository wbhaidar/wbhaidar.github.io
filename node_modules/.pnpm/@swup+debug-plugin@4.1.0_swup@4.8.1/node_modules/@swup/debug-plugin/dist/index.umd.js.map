{"version":3,"file":"index.umd.js","sources":["../node_modules/@swup/plugin/dist/index.modern.js","../src/index.ts"],"sourcesContent":["function r(){return r=Object.assign?Object.assign.bind():function(r){for(var n=1;n<arguments.length;n++){var e=arguments[n];for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&(r[t]=e[t])}return r},r.apply(this,arguments)}const n=r=>String(r).split(\".\").map(r=>String(parseInt(r||\"0\",10))).concat([\"0\",\"0\"]).slice(0,3).join(\".\");class e{constructor(){this.isSwupPlugin=!0,this.swup=void 0,this.version=void 0,this.requires={},this.handlersToUnregister=[]}mount(){}unmount(){this.handlersToUnregister.forEach(r=>r()),this.handlersToUnregister=[]}_beforeMount(){if(!this.name)throw new Error(\"You must define a name of plugin when creating a class.\")}_afterUnmount(){}_checkRequirements(){return\"object\"!=typeof this.requires||Object.entries(this.requires).forEach(([r,e])=>{if(!function(r,e,t){const s=function(r,n){var e;if(\"swup\"===r)return null!=(e=n.version)?e:\"\";{var t;const e=n.findPlugin(r);return null!=(t=null==e?void 0:e.version)?t:\"\"}}(r,t);return!!s&&((r,e)=>e.every(e=>{const[,t,s]=e.match(/^([\\D]+)?(.*)$/)||[];var o,i;return((r,n)=>{const e={\"\":r=>0===r,\">\":r=>r>0,\">=\":r=>r>=0,\"<\":r=>r<0,\"<=\":r=>r<=0};return(e[n]||e[\"\"])(r)})((i=s,o=n(o=r),i=n(i),o.localeCompare(i,void 0,{numeric:!0})),t||\">=\")}))(s,e)}(r,e=Array.isArray(e)?e:[e],this.swup)){const n=`${r} ${e.join(\", \")}`;throw new Error(`Plugin version mismatch: ${this.name} requires ${n}`)}}),!0}on(r,n,e={}){var t;n=!(t=n).name.startsWith(\"bound \")||t.hasOwnProperty(\"prototype\")?n.bind(this):n;const s=this.swup.hooks.on(r,n,e);return this.handlersToUnregister.push(s),s}once(n,e,t={}){return this.on(n,e,r({},t,{once:!0}))}before(n,e,t={}){return this.on(n,e,r({},t,{before:!0}))}replace(n,e,t={}){return this.on(n,e,r({},t,{replace:!0}))}off(r,n){return this.swup.hooks.off(r,n)}}export{e as default};\n//# sourceMappingURL=index.modern.js.map\n","import Plugin from '@swup/plugin';\nimport { query, queryAll } from 'swup';\nimport type { Swup, HookName, HookArguments } from 'swup';\n\ndeclare global {\n\tinterface Window {\n\t\tswup?: Swup;\n\t}\n}\n\ntype Options = {\n\tglobalInstance: boolean;\n};\n\nexport default class SwupDebugPlugin extends Plugin {\n\tname = 'SwupDebugPlugin';\n\n\trequires = { swup: '>=4' };\n\n\tdefaults: Options = {\n\t\tglobalInstance: false\n\t};\n\toptions: Options;\n\toriginalSwupLog?: Swup['log'];\n\toriginalSwupHookCall?: Swup['hooks']['call'];\n\toriginalSwupHookCallSync?: Swup['hooks']['callSync'];\n\n\tconstructor(options = {}) {\n\t\tsuper();\n\t\tthis.options = { ...this.defaults, ...options };\n\t}\n\n\tmount() {\n\t\t// set non-empty log method of swup\n\t\tthis.setLogImplementation();\n\n\t\t// set swup instance as a global variable swup\n\t\tthis.setGlobalInstance();\n\n\t\t// make hook calls appear in console\n\t\tthis.proxyHooksThroughConsole();\n\n\t\t// check if title tag is present\n\t\tthis.checkDocumentTitle();\n\n\t\t// check if all containers are present\n\t\tthis.checkContainers();\n\n\t\t// check if transition classes map to containers\n\t\tthis.checkAnimationSelector();\n\t}\n\n\tunmount() {\n\t\tsuper.unmount();\n\n\t\tthis.restoreLogImplementation();\n\t\tthis.restoreHooksImplementation();\n\t\tthis.unsetGlobalInstance();\n\t}\n\n\tsetLogImplementation() {\n\t\tthis.originalSwupLog = this.swup.log;\n\t\tthis.swup.log = this.log;\n\t}\n\n\trestoreLogImplementation() {\n\t\tthis.swup.log = this.originalSwupLog!;\n\t}\n\n\tproxyHooksThroughConsole() {\n\t\tthis.originalSwupHookCall = this.swup.hooks.call.bind(this.swup.hooks);\n\t\tthis.originalSwupHookCallSync = this.swup.hooks.callSync.bind(this.swup.hooks);\n\t\tthis.swup.hooks.call = this.callHook.bind(this);\n\t\tthis.swup.hooks.callSync = this.callHookSync.bind(this);\n\t}\n\n\trestoreHooksImplementation() {\n\t\tthis.swup.hooks.call = this.originalSwupHookCall!;\n\t\tthis.swup.hooks.callSync = this.originalSwupHookCallSync!;\n\t}\n\n\tsetGlobalInstance() {\n\t\tif (this.options.globalInstance) {\n\t\t\twindow.swup = this.swup;\n\t\t}\n\t}\n\n\tunsetGlobalInstance() {\n\t\tif (this.options.globalInstance) {\n\t\t\twindow.swup = undefined;\n\t\t}\n\t}\n\n\tcheckDocumentTitle() {\n\t\tif (!query('title')) {\n\t\t\tthis.error('Document is missing a title tag. It is required on every page.');\n\t\t}\n\t}\n\n\tcheckContainers() {\n\t\tfor (const selector of this.swup.options.containers) {\n\t\t\tconst containers = queryAll(selector);\n\t\t\tif (!containers.length) {\n\t\t\t\tthis.error(`Container \\`${selector}\\` is missing on the page.`);\n\t\t\t}\n\t\t\tif (containers.length > 1) {\n\t\t\t\tthis.error(`Container \\`${selector}\\` matches multiple elements.`);\n\t\t\t}\n\t\t\tif (containers.some((container) => !container.matches('body *'))) {\n\t\t\t\tthis.error(`Container \\`${selector}\\` is not supported. It must be a child of the body tag.`);\n\t\t\t}\n\t\t}\n\t}\n\n\tcheckAnimationSelector() {\n\t\tconst { animationSelector } = this.swup.options;\n\t\tif (!animationSelector) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst containers = this.swup.options.containers.map((selector) => query(selector));\n\t\tconst animatedContainers = containers.filter((el) => el?.matches(animationSelector));\n\t\tif (!animatedContainers.length) {\n\t\t\tthis.warn(`No container matches the animation selector \\`${animationSelector}\\`.`);\n\t\t}\n\t}\n\n\tlogHook<T extends HookName>(hook: T, args: HookArguments<T>) {\n\t\tconsole.groupCollapsed('%cswup:' + '%c' + hook, 'color: #343434', 'color: #009ACD');\n\t\tconsole.log(args);\n\t\tconsole.groupEnd();\n\t}\n\n\tcallHook: Swup['hooks']['call'] = (hook, args, ...rest) => {\n\t\tthis.logHook(hook, args);\n\t\treturn this.originalSwupHookCall!(hook, args, ...rest);\n\t};\n\n\tcallHookSync: Swup['hooks']['callSync'] = (hook, args, ...rest) => {\n\t\tthis.logHook(hook, args);\n\t\treturn this.originalSwupHookCallSync!(hook, args, ...rest);\n\t};\n\n\tlog(str: string, object: any): void {\n\t\tif (object) {\n\t\t\tconsole.groupCollapsed(str);\n\t\t\tfor (let key in object) {\n\t\t\t\tconsole.log(object[key]);\n\t\t\t}\n\t\t\tconsole.groupEnd();\n\t\t} else {\n\t\t\tconsole.log(str + '%c', 'color: #009ACD');\n\t\t}\n\t}\n\n\twarn(str: string): void {\n\t\tconsole.warn(`[swup debug plugin] ${str}`);\n\t}\n\n\terror(str: string): void {\n\t\tconsole.error(`[swup debug plugin] ${str}`);\n\t}\n}\n"],"names":["n","r","String","split","map","parseInt","concat","slice","join","e","every","t","s","match","o","i","localeCompare","numeric","Plugin","constructor","options","super","this","name","requires","swup","defaults","globalInstance","originalSwupLog","originalSwupHookCall","originalSwupHookCallSync","callHook","_this","hook","args","logHook","call","arguments","callHookSync","_this2","mount","setLogImplementation","setGlobalInstance","proxyHooksThroughConsole","checkDocumentTitle","checkContainers","checkAnimationSelector","unmount","restoreLogImplementation","restoreHooksImplementation","unsetGlobalInstance","log","hooks","bind","callSync","window","undefined","query","error","selector","containers","queryAll","length","some","container","matches","animationSelector","filter","el","warn","console","groupCollapsed","groupEnd","str","object","key"],"mappings":"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"}