{
  "version": 3,
  "sources": ["../../.pnpm/focus-options-polyfill@1.6.0/node_modules/focus-options-polyfill/index.js", "../../.pnpm/@swup+a11y-plugin@5.0.0_swup@4.8.1/node_modules/@swup/a11y-plugin/src/util.ts", "../../.pnpm/@swup+a11y-plugin@5.0.0_swup@4.8.1/node_modules/@swup/a11y-plugin/src/announcements.ts", "../../.pnpm/@swup+a11y-plugin@5.0.0_swup@4.8.1/node_modules/@swup/a11y-plugin/src/focus.ts", "../../.pnpm/@swup+a11y-plugin@5.0.0_swup@4.8.1/node_modules/@swup/a11y-plugin/src/index.ts"],
  "sourcesContent": ["// focus - focusOptions - preventScroll polyfill\n(function() {\n  if (\n    typeof window === \"undefined\" ||\n    typeof document === \"undefined\" ||\n    typeof HTMLElement === \"undefined\"\n  ) {\n    return;\n  }\n\n  var supportsPreventScrollOption = false;\n  try {\n    var focusElem = document.createElement(\"div\");\n    focusElem.addEventListener(\n      \"focus\",\n      function(event) {\n        event.preventDefault();\n        event.stopPropagation();\n      },\n      true\n    );\n    focusElem.focus(\n      Object.defineProperty({}, \"preventScroll\", {\n        get: function() {\n          // Edge v18 gives a false positive for supporting inputs\n          if (\n            navigator &&\n            typeof navigator.userAgent !== 'undefined' &&\n            navigator.userAgent &&\n            navigator.userAgent.match(/Edge\\/1[7-8]/)) {\n              return supportsPreventScrollOption = false\n          }\n\n          supportsPreventScrollOption = true;\n        }\n      })\n    );\n  } catch (e) {}\n\n  if (\n    HTMLElement.prototype.nativeFocus === undefined &&\n    !supportsPreventScrollOption\n  ) {\n    HTMLElement.prototype.nativeFocus = HTMLElement.prototype.focus;\n\n    var calcScrollableElements = function(element) {\n      var parent = element.parentNode;\n      var scrollableElements = [];\n      var rootScrollingElement =\n        document.scrollingElement || document.documentElement;\n\n      while (parent && parent !== rootScrollingElement) {\n        if (\n          parent.offsetHeight < parent.scrollHeight ||\n          parent.offsetWidth < parent.scrollWidth\n        ) {\n          scrollableElements.push([\n            parent,\n            parent.scrollTop,\n            parent.scrollLeft\n          ]);\n        }\n        parent = parent.parentNode;\n      }\n      parent = rootScrollingElement;\n      scrollableElements.push([parent, parent.scrollTop, parent.scrollLeft]);\n\n      return scrollableElements;\n    };\n\n    var restoreScrollPosition = function(scrollableElements) {\n      for (var i = 0; i < scrollableElements.length; i++) {\n        scrollableElements[i][0].scrollTop = scrollableElements[i][1];\n        scrollableElements[i][0].scrollLeft = scrollableElements[i][2];\n      }\n      scrollableElements = [];\n    };\n\n    var patchedFocus = function(args) {\n      if (args && args.preventScroll) {\n        var evScrollableElements = calcScrollableElements(this);\n        if (typeof setTimeout === 'function') {\n          var thisElem = this;\n          setTimeout(function () {\n            thisElem.nativeFocus();\n            restoreScrollPosition(evScrollableElements);\n          }, 0);\n        } else {\n          this.nativeFocus();\n          restoreScrollPosition(evScrollableElements);\n        }\n      }\n      else {\n        this.nativeFocus();\n      }\n    };\n\n    HTMLElement.prototype.focus = patchedFocus;\n  }\n})();\n", "export function createElement(html: string): HTMLElement {\n\tconst template = document.createElement('template');\n\ttemplate.innerHTML = html;\n\treturn template.content.children[0] as HTMLElement;\n}\n\nexport function parseTemplate(str: string, replacements: Record<string, string>): string {\n\treturn Object.keys(replacements).reduce((str, key) => {\n\t\treturn str.replace(`{${key}}`, replacements[key] || '');\n\t}, str || '');\n}\n\nexport function prefersReducedMotion(): boolean {\n\treturn window.matchMedia('(prefers-reduced-motion: reduce)').matches;\n}\n", "import { Location } from 'swup';\nimport { AnnouncementTranslations, Options } from './index.js';\nimport { createElement, parseTemplate } from './util.js';\n\nexport class Announcer {\n\tid: string = 'swup-announcer';\n\tstyle: string = `position:absolute;top:0;left:0;clip:rect(0 0 0 0);clip-path:inset(50%);overflow:hidden;white-space:nowrap;word-wrap:normal;width:1px;height:1px;`;\n\tregion: HTMLElement;\n\n\tconstructor() {\n\t\tthis.region = this.getRegion() ?? this.createRegion();\n\t}\n\n\tgetRegion(): HTMLElement | null {\n\t\treturn document.getElementById(this.id);\n\t}\n\n\tcreateRegion(): HTMLElement {\n\t\tconst liveRegion = createElement(\n\t\t\t`<p aria-live=\"assertive\" aria-atomic=\"true\" id=\"${this.id}\" style=\"${this.style}\"></p>`\n\t\t);\n\t\tdocument.body.appendChild(liveRegion);\n\t\treturn liveRegion;\n\t}\n\n\tannounce(message: string, delay: number = 0): Promise<void> {\n\t\treturn new Promise((resolve) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\t// Make each message unique to allow reading identical page titles twice in a row\n\t\t\t\tif (this.region.textContent === message) {\n\t\t\t\t\tmessage = `${message}.`;\n\t\t\t\t}\n\t\t\t\t// Clear before announcing\n\t\t\t\tthis.region.textContent = '';\n\t\t\t\tthis.region.textContent = message;\n\n\t\t\t\tresolve();\n\t\t\t}, delay);\n\t\t});\n\t}\n}\n\nexport type PageAnnouncementOptions = Pick<Options, 'headingSelector' | 'announcements'>;\n\nexport function getPageAnnouncement({\n\theadingSelector = 'h1',\n\tannouncements = {}\n}: PageAnnouncementOptions): string | undefined {\n\tconst lang = document.documentElement.lang || '*';\n\tconst { href, url, pathname: path } = Location.fromUrl(window.location.href);\n\n\tconst templates =\n\t\t(announcements as AnnouncementTranslations)[lang] ??\n\t\t(announcements as AnnouncementTranslations)['*'] ??\n\t\tannouncements;\n\tif (typeof templates !== 'object') return;\n\n\t// Look for first heading on page\n\tconst headingEl = document.querySelector(headingSelector);\n\tif (!headingEl) {\n\t\tconsole.warn(`SwupA11yPlugin: No main heading (${headingSelector}) found on new page`);\n\t}\n\n\t// Get page heading from aria attribute or text content\n\tconst heading = headingEl?.getAttribute('aria-label') || headingEl?.textContent;\n\n\t// Fall back to document title, then url if no title was found\n\tconst title = heading || document.title || parseTemplate(templates.url, { href, url, path });\n\n\t// Replace {variables} in template\n\treturn parseTemplate(templates.visit, { title, href, url, path });\n}\n", "export function focusElement(elementOrSelector: string | HTMLElement) {\n\tlet el: HTMLElement | null;\n\tif (typeof elementOrSelector === 'string') {\n\t\tel = document.querySelector<HTMLElement>(elementOrSelector);\n\t} else {\n\t\tel = elementOrSelector;\n\t}\n\n\tif (!(el instanceof HTMLElement)) return;\n\n\t// Apply a tabindex attribute to allow focusing non-focusable elements\n\tconst tabindex = el.getAttribute('tabindex');\n\tel.setAttribute('tabindex', '-1');\n\tel.focus({ preventScroll: true });\n\tif (tabindex !== null) {\n\t\tel.setAttribute('tabindex', tabindex);\n\t} else {\n\t\t// Removing the tabindex will reset screen reader position, so we'll keep it\n\t\t// el.removeAttribute('tabindex');\n\t}\n}\n\nexport function focusAutofocusElement(): boolean {\n\tconst autofocusEl = getAutofocusElement();\n\tif (!autofocusEl) return false;\n\n\tif (autofocusEl !== document.activeElement) {\n\t\t// Only focus if not already focused\n\t\t// No preventScroll flag here, as probably intended with autofocus\n\t\tautofocusEl.focus();\n\t}\n\treturn true;\n}\n\nexport function getAutofocusElement(): HTMLElement | undefined {\n\tconst focusEl = document.querySelector<HTMLElement>('body [autofocus]');\n\tif (focusEl && !focusEl.closest('[inert], [aria-disabled], [aria-hidden=\"true\"]')) {\n\t\treturn focusEl;\n\t}\n}\n", "import { HookHandler, Visit } from 'swup';\nimport Plugin from '@swup/plugin';\n\nimport 'focus-options-polyfill';\n\nimport { Announcer, getPageAnnouncement } from './announcements.js';\nimport { focusAutofocusElement, focusElement } from './focus.js';\nimport { prefersReducedMotion } from './util.js';\n\nexport interface VisitA11y {\n\t/** How to announce the new content after it inserted */\n\tannounce: string | false | undefined;\n\t/** The element to focus after the content is replaced */\n\tfocus: string | false;\n}\n\ndeclare module 'swup' {\n\texport interface Visit {\n\t\t/** Accessibility settings for this visit */\n\t\ta11y: VisitA11y;\n\t}\n\texport interface HookDefinitions {\n\t\t'content:announce': undefined;\n\t\t'content:focus': undefined;\n\t}\n\texport interface Swup {\n\t\t/**\n\t\t * Announce something programmatically\n\t\t */\n\t\tannounce?: SwupA11yPlugin['announce'];\n\t}\n}\n\n/** Templates for announcements of the new page content. */\nexport type Announcements = {\n\t/** How to announce the new page. */\n\tvisit: string;\n\t/** How to read a page url. Used as fallback if no heading was found. */\n\turl: string;\n};\n\n/** Translations of announcements, keyed by language. */\nexport type AnnouncementTranslations = {\n\t[lang: string]: Announcements;\n};\n\nexport type Options = {\n\t/** The selector for finding headings inside the main content area. */\n\theadingSelector: string;\n\t/** Whether to skip animations for users that prefer reduced motion. */\n\trespectReducedMotion: boolean;\n\t/** How to announce the new page title and url. */\n\tannouncements: Announcements | AnnouncementTranslations;\n\t/** Whether to focus elements with an [autofocus] attribute after navigation. */\n\tautofocus: boolean;\n};\n\nexport default class SwupA11yPlugin extends Plugin {\n\tname = 'SwupA11yPlugin';\n\n\trequires = { swup: '>=4' };\n\n\tdefaults: Options = {\n\t\theadingSelector: 'h1',\n\t\trespectReducedMotion: true,\n\t\tautofocus: false,\n\t\tannouncements: {\n\t\t\tvisit: 'Navigated to: {title}',\n\t\t\turl: 'New page at {url}'\n\t\t}\n\t};\n\n\toptions: Options;\n\n\t/**\n\t * The announcer instance for reading new page content.\n\t */\n\tannouncer: Announcer;\n\n\t/**\n\t * The delay before announcing new page content.\n\t * Why 100ms? see research at https://github.com/swup/a11y-plugin/pull/50\n\t */\n\tannouncementDelay: number = 100;\n\n\t/**\n\t * The selector for the main content area of the page, to focus after navigation.\n\t */\n\trootSelector: string = 'body';\n\n\tconstructor(options: Partial<Options> = {}) {\n\t\tsuper();\n\n\t\t// Merge default options with user defined options\n\t\tthis.options = { ...this.defaults, ...options };\n\n\t\t// Create announcer instance for announcing new page content\n\t\tthis.announcer = new Announcer();\n\t}\n\n\tmount() {\n\t\t// Prepare new hooks\n\t\tthis.swup.hooks.create('content:announce');\n\t\tthis.swup.hooks.create('content:focus');\n\n\t\t// Prepare visit by adding a11y settings to visit object\n\t\tthis.before('visit:start', this.prepareVisit);\n\n\t\t// Mark page as busy during transitions\n\t\tthis.on('visit:start', this.markAsBusy);\n\t\tthis.on('visit:end', this.unmarkAsBusy);\n\n\t\t// Focus new page content after visit completes\n\t\tthis.on('visit:end', this.focusContent);\n\n\t\t// Announce new page title after visit completes\n\t\tthis.on('visit:end', this.announceContent);\n\n\t\t// Move focus start point when clicking on-page anchors\n\t\tthis.on('scroll:anchor', this.handleAnchorScroll);\n\n\t\t// Disable transition and scroll animations if user prefers reduced motion\n\t\tthis.before('visit:start', this.disableAnimations);\n\t\tthis.before('link:self', this.disableAnimations);\n\t\tthis.before('link:anchor', this.disableAnimations);\n\n\t\t// Announce something programmatically\n\t\tthis.swup.announce = this.announce.bind(this);\n\t}\n\n\tunmount() {\n\t\tthis.swup.announce = undefined;\n\t}\n\n\tasync announce(message: string): Promise<void> {\n\t\tawait this.announcer.announce(message);\n\t}\n\n\tmarkAsBusy() {\n\t\tdocument.documentElement.setAttribute('aria-busy', 'true');\n\t}\n\n\tunmarkAsBusy() {\n\t\tdocument.documentElement.removeAttribute('aria-busy');\n\t}\n\n\tprepareVisit(visit: Visit) {\n\t\tvisit.a11y = {\n\t\t\tannounce: undefined,\n\t\t\tfocus: this.rootSelector\n\t\t};\n\t}\n\n\tannounceContent(visit: Visit) {\n\t\tthis.swup.hooks.callSync('content:announce', visit, undefined, (visit) => {\n\t\t\t// Allow customizing announcement before this hook\n\t\t\tif (typeof visit.a11y.announce === 'undefined') {\n\t\t\t\tvisit.a11y.announce = this.getPageAnnouncement();\n\t\t\t}\n\n\t\t\tif (!visit.a11y.announce) return;\n\n\t\t\tthis.announcer.announce(visit.a11y.announce, this.announcementDelay);\n\t\t});\n\t}\n\n\tfocusContent(visit: Visit) {\n\t\tthis.swup.hooks.callSync('content:focus', visit, undefined, (visit) => {\n\t\t\tif (!visit.a11y.focus) return;\n\n\t\t\t// Found and focused [autofocus] element? Return early\n\t\t\tif (this.options.autofocus && focusAutofocusElement() === true) return;\n\n\t\t\t// Otherwise, find and focus actual content container\n\t\t\tfocusElement(visit.a11y.focus);\n\t\t});\n\t}\n\n\thandleAnchorScroll: HookHandler<'scroll:anchor'> = (visit, { hash }) => {\n\t\tconst anchor = this.swup.getAnchorElement(hash);\n\t\tif (anchor instanceof HTMLElement) {\n\t\t\tfocusElement(anchor);\n\t\t}\n\t};\n\n\tgetPageAnnouncement(): string | undefined {\n\t\tconst { headingSelector, announcements } = this.options;\n\t\treturn getPageAnnouncement({ headingSelector, announcements });\n\t}\n\n\tdisableAnimations(visit: Visit) {\n\t\tif (this.options.respectReducedMotion && prefersReducedMotion()) {\n\t\t\tvisit.animation.animate = false;\n\t\t\t// @ts-expect-error: animate is undefined unless Scroll Plugin installed\n\t\t\tvisit.scroll.animate = false;\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": ["e", "i", "parseTemplate", "str", "replacements", "Object", "keys", "reduce", "key", "replace", "Announcer", "constructor", "_this$getRegion", "id", "this", "style", "region", "getRegion", "createRegion", "document", "getElementById", "liveRegion", "html", "template", "createElement", "innerHTML", "content", "children", "body", "appendChild", "announce", "message", "delay", "Promise", "resolve", "setTimeout", "textContent", "focusElement", "elementOrSelector", "el", "querySelector", "HTMLElement", "tabindex", "getAttribute", "setAttribute", "focus", "preventScroll", "SwupA11yPlugin", "Plugin", "options", "super", "name", "requires", "swup", "defaults", "headingSelector", "respectReducedMotion", "autofocus", "announcements", "visit", "url", "announcer", "announcementDelay", "rootSelector", "handleAnchorScroll", "hash", "anchor", "getAnchorElement", "_extends", "mount", "hooks", "create", "before", "prepareVisit", "on", "markAsBusy", "unmarkAsBusy", "focusContent", "announceContent", "disableAnimations", "bind", "unmount", "documentElement", "removeAttribute", "a11y", "callSync", "getPageAnnouncement", "autofocusEl", "focusEl", "closest", "getAutofocusElement", "activeElement", "focusAutofocusElement", "_ref", "_announcements$lang", "lang", "href", "pathname", "path", "Location", "fromUrl", "window", "location", "templates", "headingEl", "console", "warn", "title", "matchMedia", "matches", "animation", "animate", "scroll"]
}
