{
  "version": 3,
  "sources": ["../../.pnpm/delegate-it@6.2.1/node_modules/delegate-it/delegate.js", "../../.pnpm/swup@4.8.1/node_modules/swup/src/helpers/classify.ts", "../../.pnpm/swup@4.8.1/node_modules/swup/src/helpers/getCurrentUrl.ts", "../../.pnpm/swup@4.8.1/node_modules/swup/src/helpers/history.ts", "../../.pnpm/swup@4.8.1/node_modules/swup/src/helpers/delegateEvent.ts", "../../.pnpm/swup@4.8.1/node_modules/swup/src/helpers/Location.ts", "../../.pnpm/swup@4.8.1/node_modules/swup/src/helpers/matchPath.ts", "../../.pnpm/swup@4.8.1/node_modules/swup/src/modules/fetchPage.ts", "../../.pnpm/swup@4.8.1/node_modules/swup/src/modules/Cache.ts", "../../.pnpm/swup@4.8.1/node_modules/swup/src/utils/index.ts", "../../.pnpm/swup@4.8.1/node_modules/swup/src/modules/Classes.ts", "../../.pnpm/swup@4.8.1/node_modules/swup/src/modules/Visit.ts", "../../.pnpm/swup@4.8.1/node_modules/swup/src/modules/Hooks.ts", "../../.pnpm/swup@4.8.1/node_modules/swup/src/modules/getAnchorElement.ts", "../../.pnpm/swup@4.8.1/node_modules/swup/src/modules/awaitAnimations.ts", "../../.pnpm/swup@4.8.1/node_modules/swup/src/modules/navigate.ts", "../../.pnpm/swup@4.8.1/node_modules/swup/src/modules/animatePageOut.ts", "../../.pnpm/swup@4.8.1/node_modules/swup/src/modules/replaceContent.ts", "../../.pnpm/swup@4.8.1/node_modules/swup/src/modules/scrollToContent.ts", "../../.pnpm/swup@4.8.1/node_modules/swup/src/modules/animatePageIn.ts", "../../.pnpm/swup@4.8.1/node_modules/swup/src/modules/renderPage.ts", "../../.pnpm/swup@4.8.1/node_modules/swup/src/modules/plugins.ts", "../../.pnpm/swup@4.8.1/node_modules/swup/src/modules/resolveUrl.ts", "../../.pnpm/swup@4.8.1/node_modules/swup/src/Swup.ts"],
  "sourcesContent": ["/** Keeps track of raw listeners added to the base elements to avoid duplication */\nconst ledger = new WeakMap();\nfunction editLedger(wanted, baseElement, callback, setup) {\n    if (!wanted && !ledger.has(baseElement)) {\n        return false;\n    }\n    const elementMap = ledger.get(baseElement)\n        ?? new WeakMap();\n    ledger.set(baseElement, elementMap);\n    const setups = elementMap.get(callback) ?? new Set();\n    elementMap.set(callback, setups);\n    const existed = setups.has(setup);\n    if (wanted) {\n        setups.add(setup);\n    }\n    else {\n        setups.delete(setup);\n    }\n    return existed && wanted;\n}\nfunction safeClosest(event, selector) {\n    let target = event.target;\n    if (target instanceof Text) {\n        target = target.parentElement;\n    }\n    if (target instanceof Element && event.currentTarget instanceof Element) {\n        // `.closest()` may match ancestors of `currentTarget` but we only need its children\n        const closest = target.closest(selector);\n        if (closest && event.currentTarget.contains(closest)) {\n            return closest;\n        }\n    }\n}\n// This type isn't exported as a declaration, so it needs to be duplicated above\nfunction delegate(selector, type, callback, options = {}) {\n    const { signal, base = document } = options;\n    if (signal?.aborted) {\n        return;\n    }\n    // Don't pass `once` to `addEventListener` because it needs to be handled in `delegate-it`\n    const { once, ...nativeListenerOptions } = options;\n    // `document` should never be the base, it's just an easy way to define \"global event listeners\"\n    const baseElement = base instanceof Document ? base.documentElement : base;\n    // Handle the regular Element usage\n    const capture = Boolean(typeof options === 'object' ? options.capture : options);\n    const listenerFunction = (event) => {\n        const delegateTarget = safeClosest(event, String(selector));\n        if (delegateTarget) {\n            const delegateEvent = Object.assign(event, { delegateTarget });\n            callback.call(baseElement, delegateEvent);\n            if (once) {\n                baseElement.removeEventListener(type, listenerFunction, nativeListenerOptions);\n                editLedger(false, baseElement, callback, setup);\n            }\n        }\n    };\n    const setup = JSON.stringify({ selector, type, capture });\n    const isAlreadyListening = editLedger(true, baseElement, callback, setup);\n    if (!isAlreadyListening) {\n        baseElement.addEventListener(type, listenerFunction, nativeListenerOptions);\n    }\n    signal?.addEventListener('abort', () => {\n        editLedger(false, baseElement, callback, setup);\n    });\n}\nexport default delegate;\n", "/** Turn a string into a slug by lowercasing and replacing whitespace. */\nexport const classify = (text: string, fallback?: string): string => {\n\tconst output = String(text)\n\t\t.toLowerCase()\n\t\t// .normalize('NFD') // split an accented letter in the base letter and the acent\n\t\t// .replace(/[\\u0300-\\u036f]/g, '') // remove all previously split accents\n\t\t.replace(/[\\s/_.]+/g, '-') // replace spaces and _./ with '-'\n\t\t.replace(/[^\\w-]+/g, '') // remove all non-word chars\n\t\t.replace(/--+/g, '-') // replace repeating '-' with single '-'\n\t\t.replace(/^-+|-+$/g, ''); // trim '-' from edges\n\treturn output || fallback || '';\n};\n", "/** Get the current page URL: path name + query params. Optionally including hash. */\nexport const getCurrentUrl = ({ hash }: { hash?: boolean } = {}): string => {\n\treturn window.location.pathname + window.location.search + (hash ? window.location.hash : '');\n};\n", "import { getCurrentUrl } from './getCurrentUrl.js';\n\nexport interface HistoryState {\n\turl: string;\n\tsource: 'swup';\n\trandom: number;\n\tindex?: number;\n\t[key: string]: unknown;\n}\n\ntype HistoryData = Record<string, unknown>;\n\n/** Create a new history record with a custom swup identifier. */\nexport const createHistoryRecord = (url: string, data: HistoryData = {}): void => {\n\turl = url || getCurrentUrl({ hash: true });\n\tconst state: HistoryState = {\n\t\turl,\n\t\trandom: Math.random(),\n\t\tsource: 'swup',\n\t\t...data\n\t};\n\twindow.history.pushState(state, '', url);\n};\n\n/** Update the current history record with a custom swup identifier. */\nexport const updateHistoryRecord = (url: string | null = null, data: HistoryData = {}): void => {\n\turl = url || getCurrentUrl({ hash: true });\n\tconst currentState = (window.history.state as HistoryState) || {};\n\tconst state: HistoryState = {\n\t\t...currentState,\n\t\turl,\n\t\trandom: Math.random(),\n\t\tsource: 'swup',\n\t\t...data\n\t};\n\twindow.history.replaceState(state, '', url);\n};\n", "import delegate, {\n\ttype DelegateEventHandler,\n\ttype DelegateOptions,\n\ttype EventType\n} from 'delegate-it';\nimport type { ParseSelector } from 'typed-query-selector/parser.js';\n\nexport type DelegateEventUnsubscribe = {\n\tdestroy: () => void;\n};\n\n/** Register a delegated event listener. */\nexport const delegateEvent = <\n\tSelector extends string,\n\tTElement extends Element = ParseSelector<Selector, HTMLElement>,\n\tTEvent extends EventType = EventType\n>(\n\tselector: Selector,\n\ttype: TEvent,\n\tcallback: DelegateEventHandler<GlobalEventHandlersEventMap[TEvent], TElement>,\n\toptions?: DelegateOptions\n): DelegateEventUnsubscribe => {\n\tconst controller = new AbortController();\n\toptions = { ...options, signal: controller.signal };\n\tdelegate<Selector, TElement, TEvent>(selector, type, callback, options);\n\treturn { destroy: () => controller.abort() };\n};\n", "/**\n * A helper for creating a Location from either an element\n * or a URL object/string\n *\n */\nexport class Location extends URL {\n\tconstructor(url: URL | string, base: string = document.baseURI) {\n\t\tsuper(url.toString(), base);\n\t\t// Fix Safari bug with extending native classes\n\t\tObject.setPrototypeOf(this, Location.prototype);\n\t}\n\n\t/**\n\t * The full local path including query params.\n\t */\n\tget url(): string {\n\t\treturn this.pathname + this.search;\n\t}\n\n\t/**\n\t * Instantiate a Location from an element's href attribute\n\t * @param el\n\t * @returns new Location instance\n\t */\n\tstatic fromElement(el: Element): Location {\n\t\tconst href = el.getAttribute('href') || el.getAttribute('xlink:href') || '';\n\t\treturn new Location(href);\n\t}\n\n\t/**\n\t * Instantiate a Location from a URL object or string\n\t * @param url\n\t * @returns new Location instance\n\t */\n\tstatic fromUrl(url: URL | string): Location {\n\t\treturn new Location(url);\n\t}\n}\n", "import { match } from 'path-to-regexp';\n\nimport type {\n\tPath,\n\tParseOptions,\n\tTokensToRegexpOptions,\n\tRegexpToFunctionOptions,\n\tMatchFunction\n} from 'path-to-regexp';\n\nexport { type Path };\n\n/** Create a match function from a path pattern that checks if a URLs matches it. */\nexport const matchPath = <P extends object = object>(\n\tpath: Path,\n\toptions?: ParseOptions & TokensToRegexpOptions & RegexpToFunctionOptions\n): MatchFunction<P> => {\n\ttry {\n\t\treturn match<P>(path, options);\n\t} catch (error) {\n\t\tthrow new Error(`[swup] Error parsing path \"${String(path)}\":\\n${String(error)}`);\n\t}\n};\n", "import type Swup from '../Swup.js';\nimport { Location } from '../helpers.js';\nimport type { Visit } from './Visit.js';\n\n/** A page object as used by swup and its cache. */\nexport interface PageData {\n\t/** The URL of the page */\n\turl: string;\n\t/** The complete HTML response received from the server */\n\thtml: string;\n}\n\n/** Define how a page is fetched. */\nexport interface FetchOptions extends Omit<RequestInit, 'cache'> {\n\t/** The request method. */\n\tmethod?: 'GET' | 'POST';\n\t/** The body of the request: raw string, form data object or URL params. */\n\tbody?: string | FormData | URLSearchParams;\n\t/** The request timeout in milliseconds. */\n\ttimeout?: number;\n\t/** Optional visit object with additional context. @internal */\n\tvisit?: Visit;\n}\n\nexport class FetchError extends Error {\n\turl: string;\n\tstatus?: number;\n\taborted: boolean;\n\ttimedOut: boolean;\n\tconstructor(\n\t\tmessage: string,\n\t\tdetails: { url: string; status?: number; aborted?: boolean; timedOut?: boolean }\n\t) {\n\t\tsuper(message);\n\t\tthis.name = 'FetchError';\n\t\tthis.url = details.url;\n\t\tthis.status = details.status;\n\t\tthis.aborted = details.aborted || false;\n\t\tthis.timedOut = details.timedOut || false;\n\t}\n}\n\n/**\n * Fetch a page from the server, return it and cache it.\n */\nexport async function fetchPage(\n\tthis: Swup,\n\turl: URL | string,\n\toptions: FetchOptions = {}\n): Promise<PageData> {\n\turl = Location.fromUrl(url).url;\n\n\tconst { visit = this.visit } = options;\n\tconst headers = { ...this.options.requestHeaders, ...options.headers };\n\tconst timeout = options.timeout ?? this.options.timeout;\n\tconst controller = new AbortController();\n\tconst { signal } = controller;\n\toptions = { ...options, headers, signal };\n\n\tlet timedOut = false;\n\tlet timeoutId: ReturnType<typeof setTimeout> | null = null;\n\tif (timeout && timeout > 0) {\n\t\ttimeoutId = setTimeout(() => {\n\t\t\ttimedOut = true;\n\t\t\tcontroller.abort('timeout');\n\t\t}, timeout);\n\t}\n\n\t// Allow hooking before this and returning a custom response-like object (e.g. custom fetch implementation)\n\tlet response: Response;\n\ttry {\n\t\tresponse = await this.hooks.call(\n\t\t\t'fetch:request',\n\t\t\tvisit,\n\t\t\t{ url, options },\n\t\t\t(visit, { url, options }) => fetch(url, options)\n\t\t);\n\t\tif (timeoutId) {\n\t\t\tclearTimeout(timeoutId);\n\t\t}\n\t} catch (error) {\n\t\tif (timedOut) {\n\t\t\tthis.hooks.call('fetch:timeout', visit, { url });\n\t\t\tthrow new FetchError(`Request timed out: ${url}`, { url, timedOut });\n\t\t}\n\t\tif ((error as Error)?.name === 'AbortError' || signal.aborted) {\n\t\t\tthrow new FetchError(`Request aborted: ${url}`, { url, aborted: true });\n\t\t}\n\t\tthrow error;\n\t}\n\n\tconst { status, url: responseUrl } = response;\n\tconst html = await response.text();\n\n\tif (status === 500) {\n\t\tthis.hooks.call('fetch:error', visit, { status, response, url: responseUrl });\n\t\tthrow new FetchError(`Server error: ${responseUrl}`, { status, url: responseUrl });\n\t}\n\n\tif (!html) {\n\t\tthrow new FetchError(`Empty response: ${responseUrl}`, { status, url: responseUrl });\n\t}\n\n\t// Resolve real url after potential redirect\n\tconst { url: finalUrl } = Location.fromUrl(responseUrl);\n\tconst page = { url: finalUrl, html };\n\n\t// Write to cache for safe methods and non-redirects\n\tif (visit.cache.write && (!options.method || options.method === 'GET') && url === finalUrl) {\n\t\tthis.cache.set(page.url, page);\n\t}\n\n\treturn page;\n}\n", "import type Swup from '../Swup.js';\nimport { Location } from '../helpers.js';\nimport { type PageData } from './fetchPage.js';\n\nexport interface CacheData extends PageData {}\n\n/**\n * In-memory page cache.\n */\nexport class Cache {\n\t/** Swup instance this cache belongs to */\n\tprotected swup: Swup;\n\n\t/** Cached pages, indexed by URL */\n\tprotected pages: Map<string, CacheData> = new Map();\n\n\tconstructor(swup: Swup) {\n\t\tthis.swup = swup;\n\t}\n\n\t/** Number of cached pages in memory. */\n\tget size(): number {\n\t\treturn this.pages.size;\n\t}\n\n\t/** All cached pages. */\n\tget all() {\n\t\tconst copy = new Map();\n\t\tthis.pages.forEach((page, key) => {\n\t\t\tcopy.set(key, { ...page });\n\t\t});\n\t\treturn copy;\n\t}\n\n\t/** Check if the given URL has been cached. */\n\thas(url: string): boolean {\n\t\treturn this.pages.has(this.resolve(url));\n\t}\n\n\t/** Return a shallow copy of the cached page object if available. */\n\tget(url: string): CacheData | undefined {\n\t\tconst result = this.pages.get(this.resolve(url));\n\t\tif (!result) return result;\n\t\treturn { ...result };\n\t}\n\n\t/** Create a cache record for the specified URL. */\n\tset(url: string, page: CacheData) {\n\t\turl = this.resolve(url);\n\t\tpage = { ...page, url };\n\t\tthis.pages.set(url, page);\n\t\tthis.swup.hooks.callSync('cache:set', undefined, { page });\n\t}\n\n\t/** Update a cache record, overwriting or adding custom data. */\n\tupdate(url: string, payload: object) {\n\t\turl = this.resolve(url);\n\t\tconst page = { ...this.get(url), ...payload, url } as CacheData;\n\t\tthis.pages.set(url, page);\n\t}\n\n\t/** Delete a cache record. */\n\tdelete(url: string): void {\n\t\tthis.pages.delete(this.resolve(url));\n\t}\n\n\t/** Empty the cache. */\n\tclear(): void {\n\t\tthis.pages.clear();\n\t\tthis.swup.hooks.callSync('cache:clear', undefined, undefined);\n\t}\n\n\t/** Remove all cache entries that return true for a given predicate function.  */\n\tprune(predicate: (url: string, page: CacheData) => boolean): void {\n\t\tthis.pages.forEach((page, url) => {\n\t\t\tif (predicate(url, page)) {\n\t\t\t\tthis.delete(url);\n\t\t\t}\n\t\t});\n\t}\n\n\t/** Resolve URLs by making them local and letting swup resolve them. */\n\tprotected resolve(urlToResolve: string): string {\n\t\tconst { url } = Location.fromUrl(urlToResolve);\n\t\treturn this.swup.resolveUrl(url);\n\t}\n}\n", "/** Find an element by selector. */\nexport const query = (selector: string, context: Document | Element = document) => {\n\treturn context.querySelector<HTMLElement>(selector);\n};\n\n/** Find a set of elements by selector. */\nexport const queryAll = (\n\tselector: string,\n\tcontext: Document | Element = document\n): HTMLElement[] => {\n\treturn Array.from(context.querySelectorAll(selector));\n};\n\n/** Return a Promise that resolves after the next event loop. */\nexport const nextTick = (): Promise<void> => {\n\treturn new Promise((resolve) => {\n\t\trequestAnimationFrame(() => {\n\t\t\trequestAnimationFrame(() => {\n\t\t\t\tresolve();\n\t\t\t});\n\t\t});\n\t});\n};\n\n/** Check if an object is a Promise or a Thenable */\nexport function isPromise<T>(obj: unknown): obj is PromiseLike<T> {\n\treturn (\n\t\t!!obj &&\n\t\t(typeof obj === 'object' || typeof obj === 'function') &&\n\t\ttypeof (obj as Record<string, unknown>).then === 'function'\n\t);\n}\n\n/** Call a function as a Promise. Resolves with the returned Promsise or immediately. */\n// eslint-disable-next-line @typescript-eslint/ban-types, @typescript-eslint/no-explicit-any\nexport function runAsPromise(func: Function, args: unknown[] = []): Promise<unknown> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst result: unknown = func(...args);\n\t\tif (isPromise(result)) {\n\t\t\tresult.then(resolve, reject);\n\t\t} else {\n\t\t\tresolve(result);\n\t\t}\n\t});\n}\n\n/**\n * Force a layout reflow, e.g. after adding classnames\n * @see https://stackoverflow.com/a/21665117/3759615\n */\nexport function forceReflow(element?: HTMLElement): void {\n\telement = element || document.body;\n\telement?.getBoundingClientRect();\n}\n\n/**\n * Read data attribute from closest element with that attribute.\n *\n * Returns `undefined` if no element is found or attribute is missing.\n * Returns `true` if attribute is present without a value.\n */\nexport function getContextualAttr(\n\tel: Element | undefined,\n\tattr: string\n): string | boolean | undefined {\n\tconst target = el?.closest(`[${attr}]`);\n\treturn target?.hasAttribute(attr) ? target?.getAttribute(attr) || true : undefined;\n}\n", "import type Swup from '../Swup.js';\nimport { queryAll } from '../utils.js';\n\nexport class Classes {\n\tprotected swup: Swup;\n\tprotected swupClasses = [\n\t\t'to-',\n\t\t'is-changing',\n\t\t'is-rendering',\n\t\t'is-popstate',\n\t\t'is-animating',\n\t\t'is-leaving'\n\t];\n\n\tconstructor(swup: Swup) {\n\t\tthis.swup = swup;\n\t}\n\n\tprotected get selectors(): string[] {\n\t\tconst { scope } = this.swup.visit.animation;\n\t\tif (scope === 'containers') return this.swup.visit.containers;\n\t\tif (scope === 'html') return ['html'];\n\t\tif (Array.isArray(scope)) return scope;\n\t\treturn [];\n\t}\n\n\tprotected get selector(): string {\n\t\treturn this.selectors.join(',');\n\t}\n\n\tprotected get targets(): HTMLElement[] {\n\t\tif (!this.selector.trim()) return [];\n\t\treturn queryAll(this.selector);\n\t}\n\n\tadd(...classes: string[]): void {\n\t\tthis.targets.forEach((target) => target.classList.add(...classes));\n\t}\n\n\tremove(...classes: string[]): void {\n\t\tthis.targets.forEach((target) => target.classList.remove(...classes));\n\t}\n\n\tclear(): void {\n\t\tthis.targets.forEach((target) => {\n\t\t\tconst remove = target.className.split(' ').filter((c) => this.isSwupClass(c));\n\t\t\ttarget.classList.remove(...remove);\n\t\t});\n\t}\n\n\tprotected isSwupClass(className: string): boolean {\n\t\treturn this.swupClasses.some((c) => className.startsWith(c));\n\t}\n}\n", "import type Swup from '../Swup.js';\nimport type { Options } from '../Swup.js';\nimport type { HistoryAction, HistoryDirection } from './navigate.js';\n\n/** See below for the class Visit {} definition */\n// export interface Visit {}\n\nexport interface VisitFrom {\n\t/** The URL of the previous page */\n\turl: string;\n\t/** The hash of the previous page */\n\thash?: string;\n}\n\nexport interface VisitTo {\n\t/** The URL of the next page */\n\turl: string;\n\t/** The hash of the next page */\n\thash?: string;\n\t/** The HTML content of the next page */\n\thtml?: string;\n\t/** The parsed document of the next page, available during visit */\n\tdocument?: Document;\n}\n\nexport interface VisitAnimation {\n\t/** Whether this visit is animated. Default: `true` */\n\tanimate: boolean;\n\t/** Whether to wait for the next page to load before starting the animation. Default: `false` */\n\twait: boolean;\n\t/** Name of a custom animation to run. */\n\tname?: string;\n\t/** Whether this animation uses the native browser ViewTransition API. Default: `false` */\n\tnative: boolean;\n\t/** Elements on which to add animation classes. Default: `html` element */\n\tscope: 'html' | 'containers' | string[];\n\t/** Selector for detecting animation timing. Default: `[class*=\"transition-\"]` */\n\tselector: Options['animationSelector'];\n}\n\nexport interface VisitScroll {\n\t/** Whether to reset the scroll position after the visit. Default: `true` */\n\treset: boolean;\n\t/** Anchor element to scroll to on the next page. */\n\ttarget?: string | false;\n}\n\nexport interface VisitTrigger {\n\t/** DOM element that triggered this visit. */\n\tel?: Element;\n\t/** DOM event that triggered this visit. */\n\tevent?: Event;\n}\n\nexport interface VisitCache {\n\t/** Whether this visit will try to load the requested page from cache. */\n\tread: boolean;\n\t/** Whether this visit will save the loaded page in cache. */\n\twrite: boolean;\n}\n\nexport interface VisitHistory {\n\t/** History action to perform: `push` for creating a new history entry, `replace` for replacing the current entry. Default: `push` */\n\taction: HistoryAction;\n\t/** Whether this visit was triggered by a browser history navigation. */\n\tpopstate: boolean;\n\t/** The direction of travel in case of a browser history navigation: backward or forward. */\n\tdirection: HistoryDirection | undefined;\n}\n\nexport interface VisitInitOptions {\n\tto: string;\n\tfrom?: string;\n\thash?: string;\n\tel?: Element;\n\tevent?: Event;\n}\n\n/** @internal */\nexport const VisitState = {\n\tCREATED: 1,\n\tQUEUED: 2,\n\tSTARTED: 3,\n\tLEAVING: 4,\n\tLOADED: 5,\n\tENTERING: 6,\n\tCOMPLETED: 7,\n\tABORTED: 8,\n\tFAILED: 9\n} as const;\n\n/** @internal */\nexport type VisitState = (typeof VisitState)[keyof typeof VisitState];\n\n/** An object holding details about the current visit. */\nexport class Visit {\n\t/** A unique ID to identify this visit */\n\tid: number;\n\t/** The current state of this visit @internal */\n\tstate: VisitState;\n\t/** The previous page, about to leave */\n\tfrom: VisitFrom;\n\t/** The next page, about to enter */\n\tto: VisitTo;\n\t/** The content containers, about to be replaced */\n\tcontainers: Options['containers'];\n\t/** Information about animated page transitions */\n\tanimation: VisitAnimation;\n\t/** What triggered this visit */\n\ttrigger: VisitTrigger;\n\t/** Cache behavior for this visit */\n\tcache: VisitCache;\n\t/** Browser history behavior on this visit */\n\thistory: VisitHistory;\n\t/** Scroll behavior on this visit */\n\tscroll: VisitScroll;\n\t/** User-defined metadata */\n\tmeta: Record<string, unknown>;\n\n\tconstructor(swup: Swup, options: VisitInitOptions) {\n\t\tconst { to, from, hash, el, event } = options;\n\n\t\tthis.id = Math.random();\n\t\tthis.state = VisitState.CREATED;\n\t\tthis.from = { url: from ?? swup.location.url, hash: swup.location.hash };\n\t\tthis.to = { url: to, hash };\n\t\tthis.containers = swup.options.containers;\n\t\tthis.animation = {\n\t\t\tanimate: true,\n\t\t\twait: false,\n\t\t\tname: undefined,\n\t\t\tnative: swup.options.native,\n\t\t\tscope: swup.options.animationScope,\n\t\t\tselector: swup.options.animationSelector\n\t\t};\n\t\tthis.trigger = { el, event };\n\t\tthis.cache = {\n\t\t\tread: swup.options.cache,\n\t\t\twrite: swup.options.cache\n\t\t};\n\t\tthis.history = {\n\t\t\taction: 'push',\n\t\t\tpopstate: false,\n\t\t\tdirection: undefined\n\t\t};\n\t\tthis.scroll = {\n\t\t\treset: true,\n\t\t\ttarget: undefined\n\t\t};\n\t\tthis.meta = {};\n\t}\n\n\t/** @internal */\n\tadvance(state: VisitState) {\n\t\tif (this.state < state) {\n\t\t\tthis.state = state;\n\t\t}\n\t}\n\n\t/** @internal */\n\tabort() {\n\t\tthis.state = VisitState.ABORTED;\n\t}\n\n\t/** Is this visit done, i.e. completed, failed, or aborted? */\n\tget done(): boolean {\n\t\treturn this.state >= VisitState.COMPLETED;\n\t}\n}\n\n/** Create a new visit object. */\nexport function createVisit(this: Swup, options: VisitInitOptions): Visit {\n\treturn new Visit(this, options);\n}\n", "import type { DelegateEvent } from 'delegate-it';\n\nimport type Swup from '../Swup.js';\nimport { isPromise, runAsPromise } from '../utils.js';\nimport { Visit } from './Visit.js';\nimport type { FetchOptions, PageData } from './fetchPage.js';\n\nexport interface HookDefinitions {\n\t'animation:out:start': undefined;\n\t'animation:out:await': { skip: boolean };\n\t'animation:out:end': undefined;\n\t'animation:in:start': undefined;\n\t'animation:in:await': { skip: boolean };\n\t'animation:in:end': undefined;\n\t'animation:skip': undefined;\n\t'cache:clear': undefined;\n\t'cache:set': { page: PageData };\n\t'content:replace': { page: PageData };\n\t'content:scroll': undefined;\n\t'enable': undefined;\n\t'disable': undefined;\n\t'fetch:request': { url: string; options: FetchOptions };\n\t'fetch:error': { url: string; status: number; response: Response };\n\t'fetch:timeout': { url: string };\n\t'history:popstate': { event: PopStateEvent };\n\t'link:click': { el: HTMLAnchorElement; event: DelegateEvent<MouseEvent> };\n\t'link:self': undefined;\n\t'link:anchor': { hash: string };\n\t'link:newtab': { href: string };\n\t'page:load': { page?: PageData; cache?: boolean; options: FetchOptions };\n\t'page:view': { url: string; title: string };\n\t'scroll:top': { options: ScrollIntoViewOptions };\n\t'scroll:anchor': { hash: string; options: ScrollIntoViewOptions };\n\t'visit:start': undefined;\n\t'visit:transition': undefined;\n\t'visit:abort': undefined;\n\t'visit:end': undefined;\n}\n\nexport interface HookReturnValues {\n\t'content:scroll': Promise<boolean> | boolean;\n\t'fetch:request': Promise<Response>;\n\t'page:load': Promise<PageData>;\n\t'scroll:top': boolean;\n\t'scroll:anchor': boolean;\n}\n\nexport type HookArguments<T extends HookName> = HookDefinitions[T];\n\nexport type HookName = keyof HookDefinitions;\n\nexport type HookNameWithModifier = `${HookName}.${HookModifier}`;\n\ntype HookModifier = 'once' | 'before' | 'replace';\n\n/** A generic hook handler. */\nexport type HookHandler<T extends HookName> = (\n\t/** Context about the current visit. */\n\tvisit: Visit,\n\t/** Local arguments passed into the handler. */\n\targs: HookArguments<T>\n) => Promise<unknown> | unknown;\n\n/** A default hook handler with an expected return type. */\nexport type HookDefaultHandler<T extends HookName> = (\n\t/** Context about the current visit. */\n\tvisit: Visit,\n\t/** Local arguments passed into the handler. */\n\targs: HookArguments<T>,\n\t/** Default handler to be executed. Available if replacing an internal hook handler. */\n\tdefaultHandler?: HookDefaultHandler<T>\n) => T extends keyof HookReturnValues ? HookReturnValues[T] : Promise<unknown> | unknown;\n\nexport type Handlers = {\n\t[K in HookName]: HookHandler<K>[];\n};\n\nexport type HookInitOptions = {\n\t[K in HookName as K | `${K}.${HookModifier}`]: HookHandler<K>;\n} & {\n\t[K in HookName as K | `${K}.${HookModifier}.${HookModifier}`]: HookHandler<K>;\n};\n\n/** Unregister a previously registered hook handler. */\nexport type HookUnregister = () => void;\n\n/** Define when and how a hook handler is executed. */\nexport type HookOptions = {\n\t/** Execute the hook once, then remove the handler */\n\tonce?: boolean;\n\t/** Execute the hook before the internal default handler */\n\tbefore?: boolean;\n\t/** Set a priority for when to execute this hook. Lower numbers execute first. Default: `0` */\n\tpriority?: number;\n\t/** Replace the internal default handler with this hook handler */\n\treplace?: boolean;\n};\n\nexport type HookRegistration<\n\tT extends HookName,\n\tH extends HookHandler<T> | HookDefaultHandler<T> = HookHandler<T>\n> = {\n\tid: number;\n\thook: T;\n\thandler: H;\n\tdefaultHandler?: HookDefaultHandler<T>;\n} & HookOptions;\n\ntype HookEventDetail = {\n\thook: HookName;\n\targs: unknown;\n\tvisit: Visit;\n};\n\nexport type HookEvent = CustomEvent<HookEventDetail>;\n\ntype HookLedger<T extends HookName> = Map<HookHandler<T>, HookRegistration<T>>;\n\ninterface HookRegistry extends Map<HookName, HookLedger<HookName>> {\n\tget<K extends HookName>(key: K): HookLedger<K> | undefined;\n\tset<K extends HookName>(key: K, value: HookLedger<K>): this;\n}\n\n/**\n * Hook registry.\n *\n * Create, trigger and handle hooks.\n *\n */\nexport class Hooks {\n\t/** Swup instance this registry belongs to */\n\tprotected swup: Swup;\n\n\t/** Map of all registered hook handlers. */\n\tprotected registry: HookRegistry = new Map();\n\n\t// Can we deduplicate this somehow? Or make it error when not in sync with HookDefinitions?\n\t// https://stackoverflow.com/questions/53387838/how-to-ensure-an-arrays-values-the-keys-of-a-typescript-interface/53395649\n\tprotected readonly hooks: HookName[] = [\n\t\t'animation:out:start',\n\t\t'animation:out:await',\n\t\t'animation:out:end',\n\t\t'animation:in:start',\n\t\t'animation:in:await',\n\t\t'animation:in:end',\n\t\t'animation:skip',\n\t\t'cache:clear',\n\t\t'cache:set',\n\t\t'content:replace',\n\t\t'content:scroll',\n\t\t'enable',\n\t\t'disable',\n\t\t'fetch:request',\n\t\t'fetch:error',\n\t\t'fetch:timeout',\n\t\t'history:popstate',\n\t\t'link:click',\n\t\t'link:self',\n\t\t'link:anchor',\n\t\t'link:newtab',\n\t\t'page:load',\n\t\t'page:view',\n\t\t'scroll:top',\n\t\t'scroll:anchor',\n\t\t'visit:start',\n\t\t'visit:transition',\n\t\t'visit:abort',\n\t\t'visit:end'\n\t];\n\n\tconstructor(swup: Swup) {\n\t\tthis.swup = swup;\n\t\tthis.init();\n\t}\n\n\t/**\n\t * Create ledgers for all core hooks.\n\t */\n\tprotected init() {\n\t\tthis.hooks.forEach((hook) => this.create(hook));\n\t}\n\n\t/**\n\t * Create a new hook type.\n\t */\n\tcreate(hook: string) {\n\t\tif (!this.registry.has(hook as HookName)) {\n\t\t\tthis.registry.set(hook as HookName, new Map());\n\t\t}\n\t}\n\n\t/**\n\t * Check if a hook type exists.\n\t */\n\texists(hook: HookName): boolean {\n\t\treturn this.registry.has(hook);\n\t}\n\n\t/**\n\t * Get the ledger with all registrations for a hook.\n\t */\n\tprotected get<T extends HookName>(hook: T): HookLedger<T> | undefined {\n\t\tconst ledger = this.registry.get(hook);\n\t\tif (ledger) {\n\t\t\treturn ledger;\n\t\t}\n\t\tconsole.error(`Unknown hook '${hook}'`);\n\t}\n\n\t/**\n\t * Remove all handlers of all hooks.\n\t */\n\tclear() {\n\t\tthis.registry.forEach((ledger) => ledger.clear());\n\t}\n\n\t/**\n\t * Register a new hook handler.\n\t * @param hook Name of the hook to listen for\n\t * @param handler The handler function to execute\n\t * @param options Object to specify how and when the handler is executed\n\t *                Available options:\n\t *                - `once`: Only execute the handler once\n\t *                - `before`: Execute the handler before the default handler\n\t *                - `priority`: Specify the order in which the handlers are executed\n\t *                - `replace`: Replace the default handler with this handler\n\t * @returns A function to unregister the handler\n\t */\n\n\t// Overload: replacing default handler\n\ton<T extends HookName, O extends HookOptions>(hook: T, handler: HookDefaultHandler<T>, options: O & { replace: true }): HookUnregister; // prettier-ignore\n\t// Overload: passed in handler options\n\ton<T extends HookName, O extends HookOptions>(hook: T, handler: HookHandler<T>, options: O): HookUnregister; // prettier-ignore\n\t// Overload: no handler options\n\ton<T extends HookName>(hook: T, handler: HookHandler<T>): HookUnregister; // prettier-ignore\n\t// Implementation\n\ton<T extends HookName, O extends HookOptions>(\n\t\thook: T,\n\t\thandler: O['replace'] extends true ? HookDefaultHandler<T> : HookHandler<T>,\n\t\toptions: Partial<O> = {}\n\t): HookUnregister {\n\t\tconst ledger = this.get(hook);\n\t\tif (!ledger) {\n\t\t\tconsole.warn(`Hook '${hook}' not found.`);\n\t\t\treturn () => {};\n\t\t}\n\n\t\tconst id = ledger.size + 1;\n\t\tconst registration: HookRegistration<T> = { ...options, id, hook, handler };\n\t\tledger.set(handler, registration);\n\n\t\treturn () => this.off(hook, handler);\n\t}\n\n\t/**\n\t * Register a new hook handler to run before the default handler.\n\t * Shortcut for `hooks.on(hook, handler, { before: true })`.\n\t * @param hook Name of the hook to listen for\n\t * @param handler The handler function to execute\n\t * @param options Any other event options (see `hooks.on()` for details)\n\t * @returns A function to unregister the handler\n\t * @see on\n\t */\n\t// Overload: passed in handler options\n\tbefore<T extends HookName>(hook: T, handler: HookHandler<T>, options: HookOptions): HookUnregister; // prettier-ignore\n\t// Overload: no handler options\n\tbefore<T extends HookName>(hook: T, handler: HookHandler<T>): HookUnregister;\n\t// Implementation\n\tbefore<T extends HookName>(\n\t\thook: T,\n\t\thandler: HookHandler<T>,\n\t\toptions: HookOptions = {}\n\t): HookUnregister {\n\t\treturn this.on(hook, handler, { ...options, before: true });\n\t}\n\n\t/**\n\t * Register a new hook handler to replace the default handler.\n\t * Shortcut for `hooks.on(hook, handler, { replace: true })`.\n\t * @param hook Name of the hook to listen for\n\t * @param handler The handler function to execute instead of the default handler\n\t * @param options Any other event options (see `hooks.on()` for details)\n\t * @returns A function to unregister the handler\n\t * @see on\n\t */\n\t// Overload: passed in handler options\n\treplace<T extends HookName>(hook: T, handler: HookDefaultHandler<T>, options: HookOptions): HookUnregister; // prettier-ignore\n\t// Overload: no handler options\n\treplace<T extends HookName>(hook: T, handler: HookDefaultHandler<T>): HookUnregister; // prettier-ignore\n\t// Implementation\n\treplace<T extends HookName>(\n\t\thook: T,\n\t\thandler: HookDefaultHandler<T>,\n\t\toptions: HookOptions = {}\n\t): HookUnregister {\n\t\treturn this.on(hook, handler, { ...options, replace: true });\n\t}\n\n\t/**\n\t * Register a new hook handler to run once.\n\t * Shortcut for `hooks.on(hook, handler, { once: true })`.\n\t * @param hook Name of the hook to listen for\n\t * @param handler The handler function to execute\n\t * @param options Any other event options (see `hooks.on()` for details)\n\t * @see on\n\t */\n\t// Overload: passed in handler options\n\tonce<T extends HookName>(hook: T, handler: HookHandler<T>, options: HookOptions): HookUnregister; // prettier-ignore\n\t// Overload: no handler options\n\tonce<T extends HookName>(hook: T, handler: HookHandler<T>): HookUnregister;\n\t// Implementation\n\tonce<T extends HookName>(\n\t\thook: T,\n\t\thandler: HookHandler<T>,\n\t\toptions: HookOptions = {}\n\t): HookUnregister {\n\t\treturn this.on(hook, handler, { ...options, once: true });\n\t}\n\n\t/**\n\t * Unregister a hook handler.\n\t * @param hook Name of the hook the handler is registered for\n\t * @param handler The handler function that was registered.\n\t *                If omitted, all handlers for the hook will be removed.\n\t */\n\t// Overload: unregister a specific handler\n\toff<T extends HookName>(hook: T, handler: HookHandler<T> | HookDefaultHandler<T>): void;\n\t// Overload: unregister all handlers\n\toff<T extends HookName>(hook: T): void;\n\t// Implementation\n\toff<T extends HookName>(hook: T, handler?: HookHandler<T> | HookDefaultHandler<T>): void {\n\t\tconst ledger = this.get(hook);\n\t\tif (ledger && handler) {\n\t\t\tconst deleted = ledger.delete(handler);\n\t\t\tif (!deleted) {\n\t\t\t\tconsole.warn(`Handler for hook '${hook}' not found.`);\n\t\t\t}\n\t\t} else if (ledger) {\n\t\t\tledger.clear();\n\t\t}\n\t}\n\n\t/**\n\t * Trigger a hook asynchronously, executing its default handler and all registered handlers.\n\t * Will execute all handlers in order and `await` any `Promise`s they return.\n\t * @param hook Name of the hook to trigger\n\t * @param visit The visit object this hook belongs to\n\t * @param args Arguments to pass to the handler\n\t * @param defaultHandler A default implementation of this hook to execute\n\t * @returns The resolved return value of the executed default handler\n\t */\n\t// Overload: default order of arguments\n\tasync call<T extends HookName>(hook: T, visit: Visit | undefined, args: HookArguments<T>, defaultHandler?: HookDefaultHandler<T>): Promise<Awaited<ReturnType<HookDefaultHandler<T>>>>; // prettier-ignore\n\t// Overload: legacy order of arguments, with visit missing\n\tasync call<T extends HookName>(hook: T, args: HookArguments<T>, defaultHandler?: HookDefaultHandler<T>): Promise<Awaited<ReturnType<HookDefaultHandler<T>>>>; // prettier-ignore\n\t// Implementation\n\tasync call<T extends HookName>(\n\t\thook: T,\n\t\targ1: Visit | HookArguments<T>,\n\t\targ2: HookArguments<T> | HookDefaultHandler<T>,\n\t\targ3?: HookDefaultHandler<T>\n\t): Promise<Awaited<ReturnType<HookDefaultHandler<T>>>> {\n\t\tconst [visit, args, defaultHandler] = this.parseCallArgs(hook, arg1, arg2, arg3);\n\n\t\tconst { before, handler, after } = this.getHandlers(hook, defaultHandler);\n\t\tawait this.run(before, visit, args);\n\t\tconst [result] = await this.run(handler, visit, args, true);\n\t\tawait this.run(after, visit, args);\n\t\tthis.dispatchDomEvent(hook, visit, args);\n\t\treturn result;\n\t}\n\n\t/**\n\t * Trigger a hook synchronously, executing its default handler and all registered handlers.\n\t * Will execute all handlers in order, but will **not** `await` any `Promise`s they return.\n\t * @param hook Name of the hook to trigger\n\t * @param visit The visit object this hook belongs to\n\t * @param args Arguments to pass to the handler\n\t * @param defaultHandler A default implementation of this hook to execute\n\t * @returns The (possibly unresolved) return value of the executed default handler\n\t */\n\t// Overload: default order of arguments\n\tcallSync<T extends HookName>(hook: T, visit: Visit | undefined, args: HookArguments<T>, defaultHandler?: HookDefaultHandler<T>): ReturnType<HookDefaultHandler<T>>; // prettier-ignore\n\t// Overload: legacy order of arguments, with visit missing\n\tcallSync<T extends HookName>(hook: T, args: HookArguments<T>, defaultHandler?: HookDefaultHandler<T>): ReturnType<HookDefaultHandler<T>>; // prettier-ignore\n\t// Implementation\n\tcallSync<T extends HookName>(\n\t\thook: T,\n\t\targ1: Visit | HookArguments<T>,\n\t\targ2: HookArguments<T> | HookDefaultHandler<T>,\n\t\targ3?: HookDefaultHandler<T>\n\t): ReturnType<HookDefaultHandler<T>> {\n\t\tconst [visit, args, defaultHandler] = this.parseCallArgs(hook, arg1, arg2, arg3);\n\t\tconst { before, handler, after } = this.getHandlers(hook, defaultHandler);\n\t\tthis.runSync(before, visit, args);\n\t\tconst [result] = this.runSync(handler, visit, args, true);\n\t\tthis.runSync(after, visit, args);\n\t\tthis.dispatchDomEvent(hook, visit, args);\n\t\treturn result;\n\t}\n\n\t/**\n\t * Parse the call arguments for call() and callSync() to allow legacy argument order.\n\t */\n\tprotected parseCallArgs<T extends HookName>(\n\t\thook: T,\n\t\targ1: Visit | HookArguments<T> | undefined,\n\t\targ2: HookArguments<T> | HookDefaultHandler<T>,\n\t\targ3?: HookDefaultHandler<T>\n\t): [Visit | undefined, HookArguments<T>, HookDefaultHandler<T> | undefined] {\n\t\tconst isLegacyOrder =\n\t\t\t!(arg1 instanceof Visit) && (typeof arg1 === 'object' || typeof arg2 === 'function');\n\t\tif (isLegacyOrder) {\n\t\t\t// Legacy positioning: arguments in second or handler passed in third place\n\t\t\treturn [undefined, arg1 as HookArguments<T>, arg2 as HookDefaultHandler<T>];\n\t\t} else {\n\t\t\t// Default positioning: visit passed in as first argument\n\t\t\treturn [arg1, arg2 as HookArguments<T>, arg3];\n\t\t}\n\t}\n\n\t/**\n\t * Execute the handlers for a hook, in order, as `Promise`s that will be `await`ed.\n\t * @param registrations The registrations (handler + options) to execute\n\t * @param args Arguments to pass to the handler\n\t */\n\n\t// Overload: running HookDefaultHandler: expect HookDefaultHandler return type\n\tprotected async run<T extends HookName>(registrations: HookRegistration<T, HookDefaultHandler<T>>[], visit: Visit | undefined, args: HookArguments<T>, rethrow: true): Promise<Awaited<ReturnType<HookDefaultHandler<T>>>[]>; // prettier-ignore\n\t// Overload:  running user handler: expect no specific type\n\tprotected async run<T extends HookName>(registrations: HookRegistration<T>[], visit: Visit | undefined, args: HookArguments<T>): Promise<unknown[]>; // prettier-ignore\n\t// Implementation\n\tprotected async run<T extends HookName, R extends HookRegistration<T>[]>(\n\t\tregistrations: R,\n\t\tvisit: Visit | undefined = this.swup.visit,\n\t\targs: HookArguments<T>,\n\t\trethrow: boolean = false\n\t): Promise<Awaited<ReturnType<HookDefaultHandler<T>>> | unknown[]> {\n\t\tconst results = [];\n\t\tfor (const { hook, handler, defaultHandler, once } of registrations) {\n\t\t\tif (visit?.done) continue;\n\t\t\tif (once) this.off(hook, handler);\n\t\t\ttry {\n\t\t\t\tconst result = await runAsPromise(handler, [visit, args, defaultHandler]);\n\t\t\t\tresults.push(result);\n\t\t\t} catch (error) {\n\t\t\t\tif (rethrow) {\n\t\t\t\t\tthrow error;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error(`Error in hook '${hook}':`, error);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn results;\n\t}\n\n\t/**\n\t * Execute the handlers for a hook, in order, without `await`ing any returned `Promise`s.\n\t * @param registrations The registrations (handler + options) to execute\n\t * @param args Arguments to pass to the handler\n\t */\n\n\t// Overload: running HookDefaultHandler: expect HookDefaultHandler return type\n\tprotected runSync<T extends HookName>(registrations: HookRegistration<T, HookDefaultHandler<T>>[], visit: Visit | undefined, args: HookArguments<T>, rethrow: true): ReturnType<HookDefaultHandler<T>>[]; // prettier-ignore\n\t// Overload: running user handler: expect no specific type\n\tprotected runSync<T extends HookName>(registrations: HookRegistration<T>[], visit: Visit | undefined, args: HookArguments<T>): unknown[]; // prettier-ignore\n\t// Implementation\n\tprotected runSync<T extends HookName, R extends HookRegistration<T>[]>(\n\t\tregistrations: R,\n\t\tvisit: Visit | undefined = this.swup.visit,\n\t\targs: HookArguments<T>,\n\t\trethrow: boolean = false\n\t): (ReturnType<HookDefaultHandler<T>> | unknown)[] {\n\t\tconst results = [];\n\t\tfor (const { hook, handler, defaultHandler, once } of registrations) {\n\t\t\tif (visit?.done) continue;\n\t\t\tif (once) this.off(hook, handler);\n\t\t\ttry {\n\t\t\t\tconst result = (handler as HookDefaultHandler<T>)(visit, args, defaultHandler);\n\t\t\t\tresults.push(result);\n\t\t\t\tif (isPromise(result)) {\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t`Swup will not await Promises in handler for synchronous hook '${hook}'.`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (rethrow) {\n\t\t\t\t\tthrow error;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error(`Error in hook '${hook}':`, error);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn results;\n\t}\n\n\t/**\n\t * Get all registered handlers for a hook, sorted by priority and registration order.\n\t * @param hook Name of the hook\n\t * @param defaultHandler The optional default handler of this hook\n\t * @returns An object with the handlers sorted into `before` and `after` arrays,\n\t *          as well as a flag indicating if the original handler was replaced\n\t */\n\tprotected getHandlers<T extends HookName>(hook: T, defaultHandler?: HookDefaultHandler<T>) {\n\t\tconst ledger = this.get(hook);\n\t\tif (!ledger) {\n\t\t\treturn { found: false, before: [], handler: [], after: [], replaced: false };\n\t\t}\n\n\t\tconst registrations = Array.from(ledger.values());\n\n\t\t// Let TypeScript know that replaced handlers are default handlers by filtering to true\n\t\tconst def = (T: HookRegistration<T>): T is HookRegistration<T, HookDefaultHandler<T>> => true; // prettier-ignore\n\t\tconst sort = this.sortRegistrations;\n\n\t\t// Filter into before, after, and replace handlers\n\t\tconst before = registrations.filter(({ before, replace }) => before && !replace).sort(sort);\n\t\tconst replace = registrations.filter(({ replace }) => replace).filter(def).sort(sort); // prettier-ignore\n\t\tconst after = registrations.filter(({ before, replace }) => !before && !replace).sort(sort);\n\t\tconst replaced = replace.length > 0;\n\n\t\t// Define main handler registration\n\t\t// Created as HookRegistration[] array to allow passing it into hooks.run() directly\n\t\tlet handler: HookRegistration<T, HookDefaultHandler<T>>[] = [];\n\t\tif (defaultHandler) {\n\t\t\thandler = [{ id: 0, hook, handler: defaultHandler }];\n\t\t\tif (replaced) {\n\t\t\t\tconst index = replace.length - 1;\n\t\t\t\tconst { handler: replacingHandler, once } = replace[index];\n\t\t\t\tconst createDefaultHandler = (index: number): HookDefaultHandler<T> | undefined => {\n\t\t\t\t\tconst next = replace[index - 1];\n\t\t\t\t\tif (next) {\n\t\t\t\t\t\treturn (visit, args) =>\n\t\t\t\t\t\t\tnext.handler(visit, args, createDefaultHandler(index - 1));\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn defaultHandler;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tconst nestedDefaultHandler = createDefaultHandler(index);\n\t\t\t\thandler = [{ id: 0, hook, once, handler: replacingHandler, defaultHandler: nestedDefaultHandler }]; // prettier-ignore\n\t\t\t}\n\t\t}\n\n\t\treturn { found: true, before, handler, after, replaced };\n\t}\n\n\t/**\n\t * Sort two hook registrations by priority and registration order.\n\t * @param a The registration object to compare\n\t * @param b The other registration object to compare with\n\t * @returns The sort direction\n\t */\n\tprotected sortRegistrations<T extends HookName>(\n\t\ta: HookRegistration<T>,\n\t\tb: HookRegistration<T>\n\t): number {\n\t\tconst priority = (a.priority ?? 0) - (b.priority ?? 0);\n\t\tconst id = a.id - b.id;\n\t\treturn priority || id || 0;\n\t}\n\n\t/**\n\t * Dispatch a custom event on the `document` for a hook. Prefixed with `swup:`\n\t * @param hook Name of the hook.\n\t */\n\tprotected dispatchDomEvent<T extends HookName>(\n\t\thook: T,\n\t\tvisit: Visit | undefined,\n\t\targs?: HookArguments<T>\n\t): void {\n\t\tif (visit?.done) return;\n\n\t\tconst detail: HookEventDetail = { hook, args, visit: visit || this.swup.visit };\n\t\tdocument.dispatchEvent(\n\t\t\tnew CustomEvent<HookEventDetail>(`swup:any`, { detail, bubbles: true })\n\t\t);\n\t\tdocument.dispatchEvent(\n\t\t\tnew CustomEvent<HookEventDetail>(`swup:${hook}`, { detail, bubbles: true })\n\t\t);\n\t}\n\n\t/**\n\t * Parse a hook name into the name and any modifiers.\n\t * @param hook Name of the hook.\n\t */\n\tparseName(hook: HookName | HookNameWithModifier): [HookName, Partial<HookOptions>] {\n\t\tconst [name, ...modifiers] = hook.split('.');\n\t\tconst options = modifiers.reduce((acc, mod) => ({ ...acc, [mod]: true }), {});\n\t\treturn [name as HookName, options];\n\t}\n}\n", "import { query } from '../utils.js';\n\n/**\n * Find the anchor element for a given hash.\n *\n * @param hash Hash with or without leading '#'\n * @returns The element, if found, or null.\n *\n * @see https://html.spec.whatwg.org/#find-a-potential-indicated-element\n */\nexport const getAnchorElement = (hash?: string): Element | null => {\n\tif (hash && hash.charAt(0) === '#') {\n\t\thash = hash.substring(1);\n\t}\n\n\tif (!hash) {\n\t\treturn null;\n\t}\n\n\tconst decoded = decodeURIComponent(hash);\n\tlet element =\n\t\tdocument.getElementById(hash) ||\n\t\tdocument.getElementById(decoded) ||\n\t\tquery(`a[name='${CSS.escape(hash)}']`) ||\n\t\tquery(`a[name='${CSS.escape(decoded)}']`);\n\n\tif (!element && hash === 'top') {\n\t\telement = document.body;\n\t}\n\n\treturn element;\n};\n", "import { queryAll } from '../utils.js';\nimport type Swup from '../Swup.js';\nimport type { Options } from '../Swup.js';\n\nconst TRANSITION = 'transition';\nconst ANIMATION = 'animation';\n\ntype AnimationType = typeof TRANSITION | typeof ANIMATION;\ntype AnimationEndEvent = `${AnimationType}end`;\ntype AnimationProperty = 'Delay' | 'Duration';\ntype AnimationStyleKey = `${AnimationType}${AnimationProperty}` | 'transitionProperty';\n\nexport type AnimationDirection = 'in' | 'out';\n\n/**\n * Return a Promise that resolves when all CSS animations and transitions\n * are done on the page. Filters by selector or takes elements directly.\n */\nexport async function awaitAnimations(\n\tthis: Swup,\n\t{\n\t\tselector,\n\t\telements\n\t}: {\n\t\tselector: Options['animationSelector'];\n\t\telements?: NodeListOf<HTMLElement> | HTMLElement[];\n\t}\n): Promise<void> {\n\t// Allow usage of swup without animations: { animationSelector: false }\n\tif (selector === false && !elements) {\n\t\treturn;\n\t}\n\n\t// Allow passing in elements\n\tlet animatedElements: HTMLElement[] = [];\n\tif (elements) {\n\t\tanimatedElements = Array.from(elements);\n\t} else if (selector) {\n\t\tanimatedElements = queryAll(selector, document.body);\n\t\t// Warn if no elements match the selector, but keep things going\n\t\tif (!animatedElements.length) {\n\t\t\tconsole.warn(`[swup] No elements found matching animationSelector \\`${selector}\\``);\n\t\t\treturn;\n\t\t}\n\t}\n\n\tconst awaitedAnimations = animatedElements.map((el) => awaitAnimationsOnElement(el));\n\tconst hasAnimations = awaitedAnimations.filter(Boolean).length > 0;\n\tif (!hasAnimations) {\n\t\tif (selector) {\n\t\t\tconsole.warn(\n\t\t\t\t`[swup] No CSS animation duration defined on elements matching \\`${selector}\\``\n\t\t\t);\n\t\t}\n\t\treturn;\n\t}\n\n\tawait Promise.all(awaitedAnimations);\n}\n\nfunction awaitAnimationsOnElement(element: HTMLElement): Promise<void> | false {\n\tconst { type, timeout, propCount } = getTransitionInfo(element);\n\n\t// Resolve immediately if no transition defined\n\tif (!type || !timeout) {\n\t\treturn false;\n\t}\n\n\treturn new Promise((resolve) => {\n\t\tconst endEvent: AnimationEndEvent = `${type}end`;\n\t\tconst startTime = performance.now();\n\t\tlet propsTransitioned = 0;\n\n\t\tconst end = () => {\n\t\t\telement.removeEventListener(endEvent, onEnd);\n\t\t\tresolve();\n\t\t};\n\n\t\tconst onEnd = (event: TransitionEvent | AnimationEvent) => {\n\t\t\t// Skip transitions on child elements\n\t\t\tif (event.target !== element) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Skip transitions that happened before we started listening\n\t\t\tconst elapsedTime = (performance.now() - startTime) / 1000;\n\t\t\tif (elapsedTime < event.elapsedTime) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// End if all properties have transitioned\n\t\t\tif (++propsTransitioned >= propCount) {\n\t\t\t\tend();\n\t\t\t}\n\t\t};\n\n\t\tsetTimeout(() => {\n\t\t\tif (propsTransitioned < propCount) {\n\t\t\t\tend();\n\t\t\t}\n\t\t}, timeout + 1);\n\n\t\telement.addEventListener(endEvent, onEnd);\n\t});\n}\n\nfunction getTransitionInfo(element: Element) {\n\tconst styles = window.getComputedStyle(element);\n\n\tconst transitionDelays = getStyleProperties(styles, `${TRANSITION}Delay`);\n\tconst transitionDurations = getStyleProperties(styles, `${TRANSITION}Duration`);\n\tconst transitionTimeout = calculateTimeout(transitionDelays, transitionDurations);\n\n\tconst animationDelays = getStyleProperties(styles, `${ANIMATION}Delay`);\n\tconst animationDurations = getStyleProperties(styles, `${ANIMATION}Duration`);\n\tconst animationTimeout = calculateTimeout(animationDelays, animationDurations);\n\n\tconst timeout = Math.max(transitionTimeout, animationTimeout);\n\tconst type: AnimationType | null =\n\t\ttimeout > 0 ? (transitionTimeout > animationTimeout ? TRANSITION : ANIMATION) : null;\n\tconst propCount = type\n\t\t? type === TRANSITION\n\t\t\t? transitionDurations.length\n\t\t\t: animationDurations.length\n\t\t: 0;\n\n\treturn {\n\t\ttype,\n\t\ttimeout,\n\t\tpropCount\n\t};\n}\n\nexport function getStyleProperties(styles: CSSStyleDeclaration, key: AnimationStyleKey): string[] {\n\treturn (styles[key] || '').split(', ');\n}\n\nexport function calculateTimeout(delays: string[], durations: string[]): number {\n\twhile (delays.length < durations.length) {\n\t\tdelays = delays.concat(delays);\n\t}\n\n\treturn Math.max(...durations.map((duration, i) => toMs(duration) + toMs(delays[i])));\n}\n\nexport function toMs(time: string): number {\n\treturn parseFloat(time) * 1000;\n}\n", "import type Swup from '../Swup.js';\nimport { FetchError, type FetchOptions, type PageData } from './fetchPage.js';\nimport { type VisitInitOptions, type Visit, VisitState } from './Visit.js';\nimport { createHistoryRecord, updateHistoryRecord, Location, classify } from '../helpers.js';\nimport { getContextualAttr } from '../utils.js';\n\nexport type HistoryAction = 'push' | 'replace';\nexport type HistoryDirection = 'forwards' | 'backwards';\nexport type NavigationToSelfAction = 'scroll' | 'navigate';\nexport type CacheControl = Partial<{ read: boolean; write: boolean }>;\n\n/** Define how to navigate to a page. */\ntype NavigationOptions = {\n\t/** Whether this visit is animated. Default: `true` */\n\tanimate?: boolean;\n\t/** Name of a custom animation to run. */\n\tanimation?: string;\n\t/** History action to perform: `push` for creating a new history entry, `replace` for replacing the current entry. Default: `push` */\n\thistory?: HistoryAction;\n\t/** Whether this visit should read from or write to the cache. */\n\tcache?: CacheControl;\n\t/** Custom metadata associated with this visit. */\n\tmeta?: Record<string, unknown>;\n};\n\n/**\n * Navigate to a new URL.\n * @param url The URL to navigate to.\n * @param options Options for how to perform this visit.\n * @returns Promise<void>\n */\nexport function navigate(\n\tthis: Swup,\n\turl: string,\n\toptions: NavigationOptions & FetchOptions = {},\n\tinit: Omit<VisitInitOptions, 'to'> = {}\n) {\n\tif (typeof url !== 'string') {\n\t\tthrow new Error(`swup.navigate() requires a URL parameter`);\n\t}\n\n\t// Check if the visit should be ignored\n\tif (this.shouldIgnoreVisit(url, { el: init.el, event: init.event })) {\n\t\twindow.location.assign(url);\n\t\treturn;\n\t}\n\n\tconst { url: to, hash } = Location.fromUrl(url);\n\n\tconst visit = this.createVisit({ ...init, to, hash });\n\tthis.performNavigation(visit, options);\n}\n\n/**\n * Start a visit to a new URL.\n *\n * Internal method that assumes the visit context has already been created.\n *\n * As a user, you should call `swup.navigate(url)` instead.\n *\n * @param url The URL to navigate to.\n * @param options Options for how to perform this visit.\n * @returns Promise<void>\n */\nexport async function performNavigation(\n\tthis: Swup,\n\tvisit: Visit,\n\toptions: NavigationOptions & FetchOptions = {}\n): Promise<void> {\n\tif (this.navigating) {\n\t\tif (this.visit.state >= VisitState.ENTERING) {\n\t\t\t// Currently navigating and content already loaded? Finish and queue\n\t\t\tvisit.state = VisitState.QUEUED;\n\t\t\tthis.onVisitEnd = () => this.performNavigation(visit, options);\n\t\t\treturn;\n\t\t} else {\n\t\t\t// Currently navigating and content not loaded? Abort running visit\n\t\t\tawait this.hooks.call('visit:abort', this.visit, undefined);\n\t\t\tdelete this.visit.to.document;\n\t\t\tthis.visit.state = VisitState.ABORTED;\n\t\t}\n\t}\n\n\tthis.navigating = true;\n\tthis.visit = visit;\n\n\tconst { el } = visit.trigger;\n\toptions.referrer = options.referrer || this.location.url;\n\n\tif (options.animate === false) {\n\t\tvisit.animation.animate = false;\n\t}\n\n\t// Clean up old animation classes\n\tif (!visit.animation.animate) {\n\t\tthis.classes.clear();\n\t}\n\n\t// Get history action from option or attribute on trigger element\n\tconst history = options.history || getContextualAttr(el, 'data-swup-history');\n\tif (typeof history === 'string' && ['push', 'replace'].includes(history)) {\n\t\tvisit.history.action = history as HistoryAction;\n\t}\n\n\t// Get custom animation name from option or attribute on trigger element\n\tconst animation = options.animation || getContextualAttr(el, 'data-swup-animation');\n\tif (typeof animation === 'string') {\n\t\tvisit.animation.name = animation;\n\t}\n\n\t// Get custom metadata from option\n\tvisit.meta = options.meta || {};\n\n\t// Sanitize cache option\n\tif (typeof options.cache === 'object') {\n\t\tvisit.cache.read = options.cache.read ?? visit.cache.read;\n\t\tvisit.cache.write = options.cache.write ?? visit.cache.write;\n\t} else if (options.cache !== undefined) {\n\t\tvisit.cache = { read: !!options.cache, write: !!options.cache };\n\t}\n\t// Delete this so that window.fetch doesn't mis-interpret it\n\tdelete options.cache;\n\n\ttry {\n\t\tawait this.hooks.call('visit:start', visit, undefined);\n\n\t\tvisit.state = VisitState.STARTED;\n\n\t\t// Begin loading page\n\t\tconst page = this.hooks.call('page:load', visit, { options }, async (visit, args) => {\n\t\t\t// Read from cache\n\t\t\tlet cachedPage: PageData | undefined;\n\t\t\tif (visit.cache.read) {\n\t\t\t\tcachedPage = this.cache.get(visit.to.url);\n\t\t\t}\n\n\t\t\targs.page = cachedPage || (await this.fetchPage(visit.to.url, args.options));\n\t\t\targs.cache = !!cachedPage;\n\n\t\t\treturn args.page;\n\t\t});\n\n\t\t/**\n\t\t * When the page is loaded: mark the visit as loaded and save\n\t\t * the raw html and a parsed document of the received page in the visit object\n\t\t */\n\t\tpage.then(({ html }) => {\n\t\t\tvisit.advance(VisitState.LOADED);\n\t\t\tvisit.to.html = html;\n\t\t\tvisit.to.document = new DOMParser().parseFromString(html, 'text/html');\n\t\t});\n\n\t\t// Create/update history record if this is not a popstate call or leads to the same URL\n\t\tconst newUrl = visit.to.url + visit.to.hash;\n\t\tif (!visit.history.popstate) {\n\t\t\tif (visit.history.action === 'replace' || visit.to.url === this.location.url) {\n\t\t\t\tupdateHistoryRecord(newUrl);\n\t\t\t} else {\n\t\t\t\tthis.currentHistoryIndex++;\n\t\t\t\tcreateHistoryRecord(newUrl, { index: this.currentHistoryIndex });\n\t\t\t}\n\t\t}\n\t\tthis.location = Location.fromUrl(newUrl);\n\n\t\t// Mark visit type with classes\n\t\tif (visit.history.popstate) {\n\t\t\tthis.classes.add('is-popstate');\n\t\t}\n\t\tif (visit.animation.name) {\n\t\t\tthis.classes.add(`to-${classify(visit.animation.name)}`);\n\t\t}\n\n\t\t// Wait for page before starting to animate out?\n\t\tif (visit.animation.wait) {\n\t\t\tawait page;\n\t\t}\n\n\t\t// Check if failed/aborted in the meantime\n\t\tif (visit.done) return;\n\n\t\t// Perform the actual transition: animate and replace content\n\t\tawait this.hooks.call('visit:transition', visit, undefined, async () => {\n\t\t\t// No animation? Just await page and render\n\t\t\tif (!visit.animation.animate) {\n\t\t\t\tawait this.hooks.call('animation:skip', undefined);\n\t\t\t\tawait this.renderPage(visit, await page);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Animate page out, render page, animate page in\n\t\t\tvisit.advance(VisitState.LEAVING);\n\t\t\tawait this.animatePageOut(visit);\n\t\t\tif (visit.animation.native && document.startViewTransition) {\n\t\t\t\tawait document.startViewTransition(\n\t\t\t\t\tasync () => await this.renderPage(visit, await page)\n\t\t\t\t).finished;\n\t\t\t} else {\n\t\t\t\tawait this.renderPage(visit, await page);\n\t\t\t}\n\t\t\tawait this.animatePageIn(visit);\n\t\t});\n\n\t\t// Check if failed/aborted in the meantime\n\t\tif (visit.done) return;\n\n\t\t// Finalize visit\n\t\tawait this.hooks.call('visit:end', visit, undefined, () => this.classes.clear());\n\t\tvisit.state = VisitState.COMPLETED;\n\t\tthis.navigating = false;\n\n\t\t/** Run eventually queued function */\n\t\tif (this.onVisitEnd) {\n\t\t\tthis.onVisitEnd();\n\t\t\tthis.onVisitEnd = undefined;\n\t\t}\n\t} catch (error) {\n\t\t// Return early if error is undefined or signals an aborted request\n\t\tif (!error || (error as FetchError)?.aborted) {\n\t\t\tvisit.state = VisitState.ABORTED;\n\t\t\treturn;\n\t\t}\n\n\t\tvisit.state = VisitState.FAILED;\n\n\t\t// Log to console\n\t\tconsole.error(error);\n\n\t\t// Remove current history entry, then load requested url in browser\n\t\tthis.options.skipPopStateHandling = () => {\n\t\t\twindow.location.assign(visit.to.url + visit.to.hash);\n\t\t\treturn true;\n\t\t};\n\n\t\t// Go back to the actual page we're still at\n\t\twindow.history.back();\n\t} finally {\n\t\tdelete visit.to.document;\n\t}\n}\n", "import type Swup from '../Swup.js';\nimport type { Visit } from './Visit.js';\n\n/**\n * Perform the out/leave animation of the current page.\n * @returns Promise<void>\n */\nexport const animatePageOut = async function (this: Swup, visit: Visit) {\n\tawait this.hooks.call('animation:out:start', visit, undefined, () => {\n\t\tthis.classes.add('is-changing', 'is-animating', 'is-leaving');\n\t});\n\n\tawait this.hooks.call('animation:out:await', visit, { skip: false }, (visit, { skip }) => {\n\t\tif (skip) return;\n\t\treturn this.awaitAnimations({ selector: visit.animation.selector });\n\t});\n\n\tawait this.hooks.call('animation:out:end', visit, undefined);\n};\n", "import type Swup from '../Swup.js';\nimport { query, queryAll } from '../utils.js';\nimport type { Visit } from './Visit.js';\n\n/**\n * Perform the replacement of content after loading a page.\n *\n * @returns Whether all containers were replaced.\n */\nexport const replaceContent = function (this: Swup, visit: Visit): boolean {\n\tconst incomingDocument = visit.to.document;\n\tif (!incomingDocument) return false;\n\n\t// Update browser title\n\tconst title = incomingDocument.querySelector('title')?.innerText || '';\n\tdocument.title = title;\n\n\t// Save persisted elements\n\tconst persistedElements = queryAll('[data-swup-persist]:not([data-swup-persist=\"\"])');\n\n\t// Update content containers\n\tconst replaced = visit.containers\n\t\t.map((selector) => {\n\t\t\tconst currentEl = document.querySelector(selector);\n\t\t\tconst incomingEl = incomingDocument.querySelector(selector);\n\t\t\tif (currentEl && incomingEl) {\n\t\t\t\tcurrentEl.replaceWith(incomingEl.cloneNode(true));\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (!currentEl) {\n\t\t\t\tconsole.warn(`[swup] Container missing in current document: ${selector}`);\n\t\t\t}\n\t\t\tif (!incomingEl) {\n\t\t\t\tconsole.warn(`[swup] Container missing in incoming document: ${selector}`);\n\t\t\t}\n\t\t\treturn false;\n\t\t})\n\t\t.filter(Boolean);\n\n\t// Restore persisted elements\n\tpersistedElements.forEach((existing) => {\n\t\tconst key = existing.getAttribute('data-swup-persist');\n\t\tconst replacement = query(`[data-swup-persist=\"${key}\"]`);\n\t\tif (replacement && replacement !== existing) {\n\t\t\treplacement.replaceWith(existing);\n\t\t}\n\t});\n\n\t// Return true if all containers were replaced\n\treturn replaced.length === visit.containers.length;\n};\n", "import type Swup from '../Swup.js';\nimport type { Visit } from './Visit.js';\n\n/**\n * Update the scroll position after page render.\n * @returns Promise<boolean>\n */\nexport const scrollToContent = function (this: Swup, visit: Visit): boolean {\n\tconst options: ScrollIntoViewOptions = { behavior: 'auto' };\n\tconst { target, reset } = visit.scroll;\n\tconst scrollTarget = target ?? visit.to.hash;\n\n\tlet scrolled = false;\n\n\tif (scrollTarget) {\n\t\tscrolled = this.hooks.callSync(\n\t\t\t'scroll:anchor',\n\t\t\tvisit,\n\t\t\t{ hash: scrollTarget, options },\n\t\t\t(visit, { hash, options }) => {\n\t\t\t\tconst anchor = this.getAnchorElement(hash);\n\t\t\t\tif (anchor) {\n\t\t\t\t\tanchor.scrollIntoView(options);\n\t\t\t\t}\n\t\t\t\treturn !!anchor;\n\t\t\t}\n\t\t);\n\t}\n\n\tif (reset && !scrolled) {\n\t\tscrolled = this.hooks.callSync('scroll:top', visit, { options }, (visit, { options }) => {\n\t\t\twindow.scrollTo({ top: 0, left: 0, ...options });\n\t\t\treturn true;\n\t\t});\n\t}\n\n\treturn scrolled;\n};\n", "import type Swup from '../Swup.js';\nimport { nextTick } from '../utils.js';\nimport type { Visit } from './Visit.js';\n\n/**\n * Perform the in/enter animation of the next page.\n * @returns Promise<void>\n */\nexport const animatePageIn = async function (this: Swup, visit: Visit) {\n\t// Check if failed/aborted in the meantime\n\tif (visit.done) return;\n\n\tconst animation = this.hooks.call(\n\t\t'animation:in:await',\n\t\tvisit,\n\t\t{ skip: false },\n\t\t(visit, { skip }) => {\n\t\t\tif (skip) return;\n\t\t\treturn this.awaitAnimations({ selector: visit.animation.selector });\n\t\t}\n\t);\n\n\tawait nextTick();\n\n\tawait this.hooks.call('animation:in:start', visit, undefined, () => {\n\t\tthis.classes.remove('is-animating');\n\t});\n\n\tawait animation;\n\n\tawait this.hooks.call('animation:in:end', visit, undefined);\n};\n", "import { updateHistoryRecord, getCurrentUrl, classify, Location } from '../helpers.js';\nimport type Swup from '../Swup.js';\nimport type { PageData } from './fetchPage.js';\nimport { VisitState, type Visit } from './Visit.js';\n\n/**\n * Render the next page: replace the content and update scroll position.\n */\nexport const renderPage = async function (this: Swup, visit: Visit, page: PageData): Promise<void> {\n\t// Check if failed/aborted in the meantime\n\tif (visit.done) return;\n\n\tvisit.advance(VisitState.ENTERING);\n\n\tconst { url } = page;\n\n\t// update state if the url was redirected\n\tif (!this.isSameResolvedUrl(getCurrentUrl(), url)) {\n\t\tupdateHistoryRecord(url);\n\t\tthis.location = Location.fromUrl(url);\n\t\tvisit.to.url = this.location.url;\n\t\tvisit.to.hash = this.location.hash;\n\t}\n\n\t// replace content: allow handlers and plugins to overwrite paga data and containers\n\tawait this.hooks.call('content:replace', visit, { page }, (visit, { page }) => {\n\t\tthis.classes.remove('is-leaving');\n\t\t// only add for animated page loads\n\t\tif (visit.animation.animate) {\n\t\t\tthis.classes.add('is-rendering');\n\t\t}\n\t\tconst success = this.replaceContent(visit);\n\t\tif (!success) {\n\t\t\tthrow new Error('[swup] Container mismatch, aborting');\n\t\t}\n\t\tif (visit.animation.animate) {\n\t\t\t// Make sure to add these classes to new containers as well\n\t\t\tthis.classes.add('is-changing', 'is-animating', 'is-rendering');\n\t\t\tif (visit.animation.name) {\n\t\t\t\tthis.classes.add(`to-${classify(visit.animation.name)}`);\n\t\t\t}\n\t\t}\n\t});\n\n\t// scroll into view: either anchor or top of page\n\tawait this.hooks.call('content:scroll', visit, undefined, () => {\n\t\treturn this.scrollToContent(visit);\n\t});\n\n\tawait this.hooks.call('page:view', visit, { url: this.location.url, title: document.title });\n};\n", "import type Swup from '../Swup.js';\n\nexport type Plugin = {\n\t/** Identify as a swup plugin */\n\tisSwupPlugin: true;\n\t/** Name of this plugin */\n\tname: string;\n\t/** Version of this plugin. Currently not in use, defined here for backward compatiblity. */\n\tversion?: string;\n\t/** The swup instance that mounted this plugin */\n\tswup?: Swup;\n\t/** Version requirements of this plugin. Example: `{ swup: '>=4' }` */\n\trequires?: Record<string, string | string[]>;\n\t/** Run on mount */\n\tmount: () => void;\n\t/** Run on unmount */\n\tunmount: () => void;\n\t_beforeMount?: () => void;\n\t_afterUnmount?: () => void;\n\t_checkRequirements?: () => boolean;\n};\n\nconst isSwupPlugin = (maybeInvalidPlugin: unknown): maybeInvalidPlugin is Plugin => {\n\t// @ts-ignore: this might be anything, object or no\n\treturn Boolean(maybeInvalidPlugin?.isSwupPlugin);\n};\n\n/** Install a plugin. */\nexport const use = function (this: Swup, plugin: unknown) {\n\tif (!isSwupPlugin(plugin)) {\n\t\tconsole.error('Not a swup plugin instance', plugin);\n\t\treturn;\n\t}\n\n\tplugin.swup = this;\n\tif (plugin._checkRequirements) {\n\t\tif (!plugin._checkRequirements()) {\n\t\t\treturn;\n\t\t}\n\t}\n\tif (plugin._beforeMount) {\n\t\tplugin._beforeMount();\n\t}\n\tplugin.mount();\n\n\tthis.plugins.push(plugin);\n\n\treturn this.plugins;\n};\n\n/** Uninstall a plugin. */\nexport function unuse(this: Swup, pluginOrName: Plugin | string) {\n\tconst plugin = this.findPlugin(pluginOrName);\n\tif (!plugin) {\n\t\tconsole.error('No such plugin', plugin);\n\t\treturn;\n\t}\n\n\tplugin.unmount();\n\tif (plugin._afterUnmount) {\n\t\tplugin._afterUnmount();\n\t}\n\n\tthis.plugins = this.plugins.filter((p) => p !== plugin);\n\n\treturn this.plugins;\n}\n\n/** Find a plugin by name or reference. */\nexport function findPlugin(this: Swup, pluginOrName: Plugin | string) {\n\treturn this.plugins.find(\n\t\t(plugin) =>\n\t\t\tplugin === pluginOrName ||\n\t\t\tplugin.name === pluginOrName ||\n\t\t\tplugin.name === `Swup${String(pluginOrName)}`\n\t);\n}\n", "import type Swup from '../Swup.js';\n\n/**\n * Utility function to validate and run the global option 'resolveUrl'\n * @param {string} url\n * @returns {string} the resolved url\n */\nexport function resolveUrl(this: Swup, url: string): string {\n\tif (typeof this.options.resolveUrl !== 'function') {\n\t\tconsole.warn(`[swup] options.resolveUrl expects a callback function.`);\n\t\treturn url;\n\t}\n\tconst result = this.options.resolveUrl(url);\n\tif (!result || typeof result !== 'string') {\n\t\tconsole.warn(`[swup] options.resolveUrl needs to return a url`);\n\t\treturn url;\n\t}\n\tif (result.startsWith('//') || result.startsWith('http')) {\n\t\tconsole.warn(`[swup] options.resolveUrl needs to return a relative url`);\n\t\treturn url;\n\t}\n\treturn result;\n}\n\n/**\n * Compares the resolved version of two paths and returns true if they are the same\n * @param {string} url1\n * @param {string} url2\n * @returns {boolean}\n */\nexport function isSameResolvedUrl(this: Swup, url1: string, url2: string): boolean {\n\treturn this.resolveUrl(url1) === this.resolveUrl(url2);\n}\n", "import { type DelegateEvent } from 'delegate-it';\n\nimport version from './config/version.js';\n\nimport { delegateEvent, getCurrentUrl, Location, updateHistoryRecord } from './helpers.js';\nimport { type DelegateEventUnsubscribe } from './helpers/delegateEvent.js';\n\nimport { Cache } from './modules/Cache.js';\nimport { Classes } from './modules/Classes.js';\nimport { type Visit, createVisit } from './modules/Visit.js';\nimport { Hooks, type HookName, type HookInitOptions } from './modules/Hooks.js';\nimport { getAnchorElement } from './modules/getAnchorElement.js';\nimport { awaitAnimations } from './modules/awaitAnimations.js';\nimport { navigate, performNavigation, type NavigationToSelfAction } from './modules/navigate.js';\nimport { fetchPage } from './modules/fetchPage.js';\nimport { animatePageOut } from './modules/animatePageOut.js';\nimport { replaceContent } from './modules/replaceContent.js';\nimport { scrollToContent } from './modules/scrollToContent.js';\nimport { animatePageIn } from './modules/animatePageIn.js';\nimport { renderPage } from './modules/renderPage.js';\nimport { use, unuse, findPlugin, type Plugin } from './modules/plugins.js';\nimport { isSameResolvedUrl, resolveUrl } from './modules/resolveUrl.js';\nimport { nextTick } from './utils.js';\nimport { type HistoryState } from './helpers/history.js';\n\n/** Options for customizing swup's behavior. */\nexport type Options = {\n\t/** Whether history visits are animated. Default: `false` */\n\tanimateHistoryBrowsing: boolean;\n\t/** Selector for detecting animation timing. Default: `[class*=\"transition-\"]` */\n\tanimationSelector: string | false;\n\t/** Elements on which to add animation classes. Default: `html` element */\n\tanimationScope: 'html' | 'containers';\n\t/** Enable in-memory page cache. Default: `true` */\n\tcache: boolean;\n\t/** Content containers to be replaced on page visits. Default: `['#swup']` */\n\tcontainers: string[];\n\t/** Callback for ignoring visits. Receives the element and event that triggered the visit. */\n\tignoreVisit: (url: string, { el, event }: { el?: Element; event?: Event }) => boolean;\n\t/** Selector for links that trigger visits. Default: `'a[href]'` */\n\tlinkSelector: string;\n\t/** How swup handles links to the same page. Default: `scroll` */\n\tlinkToSelf: NavigationToSelfAction;\n\t/** Enable native animations using the View Transitions API. */\n\tnative: boolean;\n\t/** Hook handlers to register. */\n\thooks: Partial<HookInitOptions>;\n\t/** Plugins to register on startup. */\n\tplugins: Plugin[];\n\t/** Custom headers sent along with fetch requests. */\n\trequestHeaders: Record<string, string>;\n\t/** Rewrite URLs before loading them. */\n\tresolveUrl: (url: string) => string;\n\t/** Callback for telling swup to ignore certain popstate events.  */\n\tskipPopStateHandling: (event: PopStateEvent) => boolean;\n\t/** Request timeout in milliseconds. */\n\ttimeout: number;\n};\n\nconst defaults: Options = {\n\tanimateHistoryBrowsing: false,\n\tanimationSelector: '[class*=\"transition-\"]',\n\tanimationScope: 'html',\n\tcache: true,\n\tcontainers: ['#swup'],\n\thooks: {},\n\tignoreVisit: (url, { el } = {}) => !!el?.closest('[data-no-swup]'),\n\tlinkSelector: 'a[href]',\n\tlinkToSelf: 'scroll',\n\tnative: false,\n\tplugins: [],\n\tresolveUrl: (url) => url,\n\trequestHeaders: {\n\t\t'X-Requested-With': 'swup',\n\t\t'Accept': 'text/html, application/xhtml+xml'\n\t},\n\tskipPopStateHandling: (event) => (event.state as HistoryState)?.source !== 'swup',\n\ttimeout: 0\n};\n\n/** Swup page transition library. */\nexport default class Swup {\n\t/** Library version */\n\treadonly version: string = version;\n\t/** Options passed into the instance */\n\toptions: Options;\n\t/** Default options before merging user options */\n\treadonly defaults: Options = defaults;\n\t/** Registered plugin instances */\n\tplugins: Plugin[] = [];\n\t/** Data about the current visit */\n\tvisit: Visit;\n\t/** Cache instance */\n\treadonly cache: Cache;\n\t/** Hook registry */\n\treadonly hooks: Hooks;\n\t/** Animation class manager */\n\treadonly classes: Classes;\n\t/** Location of the currently visible page */\n\tlocation: Location = Location.fromUrl(window.location.href);\n\t/** URL of the currently visible page @deprecated Use swup.location.url instead */\n\tget currentPageUrl(): string {\n\t\treturn this.location.url;\n\t}\n\t/** Index of the current history entry */\n\tprotected currentHistoryIndex: number;\n\t/** Delegated event subscription handle */\n\tprotected clickDelegate?: DelegateEventUnsubscribe;\n\t/** Navigation status */\n\tprotected navigating: boolean = false;\n\t/** Run anytime a visit ends */\n\tprotected onVisitEnd?: () => Promise<unknown>;\n\n\t/** Install a plugin */\n\tuse = use;\n\t/** Uninstall a plugin */\n\tunuse = unuse;\n\t/** Find a plugin by name or instance */\n\tfindPlugin = findPlugin;\n\n\t/** Log a message. Has no effect unless debug plugin is installed */\n\tlog: (message: string, context?: unknown) => void = () => {};\n\n\t/** Navigate to a new URL */\n\tnavigate = navigate;\n\t/** Actually perform a navigation */\n\tprotected performNavigation = performNavigation;\n\t/** Create a new context for this visit */\n\tprotected createVisit = createVisit;\n\t/** Register a delegated event listener */\n\tdelegateEvent = delegateEvent;\n\t/** Fetch a page from the server */\n\tfetchPage = fetchPage;\n\t/** Resolve when animations on the page finish */\n\tawaitAnimations = awaitAnimations;\n\tprotected renderPage = renderPage;\n\t/** Replace the content after page load */\n\treplaceContent = replaceContent;\n\tprotected animatePageIn = animatePageIn;\n\tprotected animatePageOut = animatePageOut;\n\tprotected scrollToContent = scrollToContent;\n\t/** Find the anchor element for a given hash */\n\tgetAnchorElement = getAnchorElement;\n\n\t/** Get the current page URL */\n\tgetCurrentUrl = getCurrentUrl;\n\t/** Resolve a URL to its final location */\n\tresolveUrl = resolveUrl;\n\t/** Check if two URLs resolve to the same location */\n\tprotected isSameResolvedUrl = isSameResolvedUrl;\n\n\tconstructor(options: Partial<Options> = {}) {\n\t\t// Merge defaults and options\n\t\tthis.options = { ...this.defaults, ...options };\n\n\t\tthis.handleLinkClick = this.handleLinkClick.bind(this);\n\t\tthis.handlePopState = this.handlePopState.bind(this);\n\n\t\tthis.cache = new Cache(this);\n\t\tthis.classes = new Classes(this);\n\t\tthis.hooks = new Hooks(this);\n\t\tthis.visit = this.createVisit({ to: '' });\n\n\t\tthis.currentHistoryIndex = (window.history.state as HistoryState)?.index ?? 1;\n\n\t\tthis.enable();\n\t}\n\n\t/** Enable this instance, adding listeners and classnames. */\n\tasync enable() {\n\t\t// Add event listener\n\t\tconst { linkSelector } = this.options;\n\t\tthis.clickDelegate = this.delegateEvent(linkSelector, 'click', this.handleLinkClick);\n\n\t\twindow.addEventListener('popstate', this.handlePopState);\n\n\t\t// Set scroll restoration to manual if animating history visits\n\t\tif (this.options.animateHistoryBrowsing) {\n\t\t\twindow.history.scrollRestoration = 'manual';\n\t\t}\n\n\t\t// Initial save to cache\n\t\tif (this.options.cache) {\n\t\t\t// Disabled to avoid caching modified dom state: logic moved to preload plugin\n\t\t\t// https://github.com/swup/swup/issues/475\n\t\t}\n\n\t\t// Sanitize/check native option\n\t\tthis.options.native = this.options.native && !!document.startViewTransition;\n\n\t\t// Mount plugins\n\t\tthis.options.plugins.forEach((plugin) => this.use(plugin));\n\n\t\t// Install user hooks\n\t\tfor (const [key, handler] of Object.entries(this.options.hooks)) {\n\t\t\t// Build hook options from modifier suffix: 'content:replace.before' => { before: true }\n\t\t\tconst [hook, modifiers] = this.hooks.parseName(key as HookName);\n\t\t\t// @ts-expect-error: object.entries() does not preserve key/value types\n\t\t\tthis.hooks.on(hook, handler, modifiers);\n\t\t}\n\n\t\t// Create initial history record\n\t\tif ((window.history.state as HistoryState)?.source !== 'swup') {\n\t\t\tupdateHistoryRecord(null, { index: this.currentHistoryIndex });\n\t\t}\n\n\t\t// Give consumers a chance to hook into enable\n\t\tawait nextTick();\n\n\t\t// Trigger enable hook\n\t\tawait this.hooks.call('enable', undefined, undefined, () => {\n\t\t\tconst html = document.documentElement;\n\t\t\thtml.classList.add('swup-enabled');\n\t\t\thtml.classList.toggle('swup-native', this.options.native);\n\t\t});\n\t}\n\n\t/** Disable this instance, removing listeners and classnames. */\n\tasync destroy() {\n\t\t// remove delegated listener\n\t\tthis.clickDelegate!.destroy();\n\n\t\t// remove popstate listener\n\t\twindow.removeEventListener('popstate', this.handlePopState);\n\n\t\t// empty cache\n\t\tthis.cache.clear();\n\n\t\t// unmount plugins\n\t\tthis.options.plugins.forEach((plugin) => this.unuse(plugin));\n\n\t\t// trigger disable hook\n\t\tawait this.hooks.call('disable', undefined, undefined, () => {\n\t\t\tconst html = document.documentElement;\n\t\t\thtml.classList.remove('swup-enabled');\n\t\t\thtml.classList.remove('swup-native');\n\t\t});\n\n\t\t// remove handlers\n\t\tthis.hooks.clear();\n\t}\n\n\t/** Determine if a visit should be ignored by swup, based on URL or trigger element. */\n\tshouldIgnoreVisit(href: string, { el, event }: { el?: Element; event?: Event } = {}) {\n\t\tconst { origin, url, hash } = Location.fromUrl(href);\n\n\t\t// Ignore if the new origin doesn't match the current one\n\t\tif (origin !== window.location.origin) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Ignore if the link/form would open a new window (or none at all)\n\t\tif (el && this.triggerWillOpenNewWindow(el)) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Ignore if the visit should be ignored as per user options\n\t\tif (this.options.ignoreVisit(url + hash, { el, event })) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Finally, allow the visit\n\t\treturn false;\n\t}\n\n\tprotected handleLinkClick(event: DelegateEvent<MouseEvent>) {\n\t\tconst el = event.delegateTarget as HTMLAnchorElement;\n\t\tconst { href, url, hash } = Location.fromElement(el);\n\n\t\t// Exit early if the link should be ignored\n\t\tif (this.shouldIgnoreVisit(href, { el, event })) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Ignore if swup is currently navigating towards the link's URL\n\t\tif (this.navigating && url === this.visit.to.url) {\n\t\t\tevent.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tconst visit = this.createVisit({ to: url, hash, el, event });\n\n\t\t// Exit early if control key pressed\n\t\tif (event.metaKey || event.ctrlKey || event.shiftKey || event.altKey) {\n\t\t\tthis.hooks.callSync('link:newtab', visit, { href });\n\t\t\treturn;\n\t\t}\n\n\t\t// Exit early if other than left mouse button\n\t\tif (event.button !== 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.hooks.callSync('link:click', visit, { el, event }, () => {\n\t\t\tconst from = visit.from.url ?? '';\n\n\t\t\tevent.preventDefault();\n\n\t\t\t// Handle links to the same page\n\t\t\tif (!url || url === from) {\n\t\t\t\tif (hash) {\n\t\t\t\t\t// With hash: scroll to anchor\n\t\t\t\t\tthis.hooks.callSync('link:anchor', visit, { hash }, () => {\n\t\t\t\t\t\tupdateHistoryRecord(url + hash);\n\t\t\t\t\t\tthis.scrollToContent(visit);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t// Without hash: scroll to top or load/reload page\n\t\t\t\t\tthis.hooks.callSync('link:self', visit, undefined, () => {\n\t\t\t\t\t\tif (this.options.linkToSelf === 'navigate') {\n\t\t\t\t\t\t\tthis.performNavigation(visit);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tupdateHistoryRecord(url);\n\t\t\t\t\t\t\tthis.scrollToContent(visit);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Exit early if the resolved path hasn't changed\n\t\t\tif (this.isSameResolvedUrl(url, from)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Finally, proceed with loading the page\n\t\t\tthis.performNavigation(visit);\n\t\t});\n\t}\n\n\tprotected handlePopState(event: PopStateEvent) {\n\t\tconst href: string = (event.state as HistoryState)?.url ?? window.location.href;\n\n\t\t// Exit early if this event should be ignored\n\t\tif (this.options.skipPopStateHandling(event)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Exit early if the resolved path hasn't changed\n\t\tif (this.isSameResolvedUrl(getCurrentUrl(), this.location.url)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { url, hash } = Location.fromUrl(href);\n\n\t\tconst visit = this.createVisit({ to: url, hash, event });\n\n\t\t// Mark as history visit\n\t\tvisit.history.popstate = true;\n\n\t\t// Determine direction of history visit\n\t\tconst index = (event.state as HistoryState)?.index ?? 0;\n\t\tif (index && index !== this.currentHistoryIndex) {\n\t\t\tconst direction = index - this.currentHistoryIndex > 0 ? 'forwards' : 'backwards';\n\t\t\tvisit.history.direction = direction;\n\t\t\tthis.currentHistoryIndex = index;\n\t\t}\n\n\t\t// Disable animation & scrolling for history visits\n\t\tvisit.animation.animate = false;\n\t\tvisit.scroll.reset = false;\n\t\tvisit.scroll.target = false;\n\n\t\t// Animated history visit: re-enable animation & scroll reset\n\t\tif (this.options.animateHistoryBrowsing) {\n\t\t\tvisit.animation.animate = true;\n\t\t\tvisit.scroll.reset = true;\n\t\t}\n\n\t\tthis.hooks.callSync('history:popstate', visit, { event }, () => {\n\t\t\tthis.performNavigation(visit);\n\t\t});\n\t}\n\n\t/** Determine whether an element will open a new tab when clicking/activating. */\n\tprotected triggerWillOpenNewWindow(triggerEl: Element) {\n\t\tif (triggerEl.matches('[download], [target=\"_blank\"]')) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["classify", "text", "fallback", "String", "toLowerCase", "replace", "getCurrentUrl", "hash", "window", "location", "pathname", "search", "createHistoryRecord", "url", "data", "state", "_extends", "random", "Math", "source", "history", "pushState", "updateHistoryRecord", "currentState", "replaceState", "delegateEvent", "selector", "type", "callback", "options", "controller", "AbortController", "signal", "delegate", "destroy", "abort", "Location", "URL", "constructor", "base", "document", "baseURI", "super", "toString", "Object", "setPrototypeOf", "this", "prototype", "el", "href", "getAttribute", "FetchError", "Error", "constructor", "message", "details", "super", "this", "url", "status", "aborted", "timedOut", "name", "async", "fetchPage", "options", "_options$timeout", "Location", "fromUrl", "visit", "headers", "_extends", "requestHeaders", "timeout", "controller", "AbortController", "signal", "response", "timeoutId", "setTimeout", "abort", "hooks", "call", "fetch", "clearTimeout", "error", "responseUrl", "html", "text", "finalUrl", "page", "cache", "write", "method", "set", "Cache", "swup", "pages", "Map", "size", "all", "copy", "forEach", "key", "has", "resolve", "get", "result", "callSync", "update", "payload", "delete", "clear", "undefined", "prune", "predicate", "urlToResolve", "resolveUrl", "query", "selector", "context", "document", "querySelector", "queryAll", "Array", "from", "querySelectorAll", "nextTick", "Promise", "requestAnimationFrame", "isPromise", "obj", "then", "runAsPromise", "func", "args", "reject", "getContextualAttr", "el", "attr", "target", "closest", "hasAttribute", "getAttribute", "Classes", "constructor", "swup", "this", "swupClasses", "selectors", "scope", "visit", "animation", "containers", "Array", "isArray", "selector", "join", "targets", "trim", "queryAll", "add", "classes", "forEach", "classList", "remove", "clear", "className", "split", "filter", "c", "isSwupClass", "some", "startsWith", "Visit", "options", "id", "state", "from", "to", "trigger", "cache", "history", "scroll", "meta", "hash", "event", "Math", "random", "url", "location", "animate", "wait", "name", "native", "animationScope", "animationSelector", "read", "write", "action", "popstate", "direction", "undefined", "reset", "advance", "abort", "done", "createVisit", "Hooks", "registry", "Map", "hooks", "init", "hook", "create", "has", "set", "exists", "get", "ledger", "console", "error", "on", "handler", "warn", "registration", "_extends", "size", "off", "before", "replace", "once", "delete", "arg1", "arg2", "arg3", "args", "defaultHandler", "parseCallArgs", "after", "getHandlers", "run", "result", "dispatchDomEvent", "callSync", "runSync", "registrations", "rethrow", "results", "runAsPromise", "push", "isPromise", "found", "replaced", "values", "sort", "sortRegistrations", "T", "length", "index", "replacingHandler", "createDefaultHandler", "next", "a", "b", "_a$priority", "_b$priority", "priority", "detail", "document", "dispatchEvent", "CustomEvent", "bubbles", "parseName", "modifiers", "reduce", "acc", "mod", "getAnchorElement", "charAt", "substring", "decoded", "decodeURIComponent", "element", "getElementById", "query", "CSS", "escape", "body", "TRANSITION", "ANIMATION", "async", "awaitAnimations", "elements", "animatedElements", "awaitedAnimations", "map", "type", "timeout", "propCount", "styles", "window", "getComputedStyle", "transitionDelays", "getStyleProperties", "transitionDurations", "transitionTimeout", "calculateTimeout", "animationDelays", "animationDurations", "animationTimeout", "max", "Promise", "resolve", "endEvent", "startTime", "performance", "now", "propsTransitioned", "end", "removeEventListener", "onEnd", "elapsedTime", "setTimeout", "addEventListener", "Boolean", "all", "key", "delays", "durations", "concat", "duration", "i", "toMs", "time", "parseFloat", "navigate", "Error", "shouldIgnoreVisit", "assign", "Location", "fromUrl", "performNavigation", "navigating", "onVisitEnd", "call", "referrer", "includes", "_options$cache$read", "_options$cache$write", "page", "cachedPage", "fetchPage", "then", "html", "DOMParser", "parseFromString", "newUrl", "updateHistoryRecord", "currentHistoryIndex", "createHistoryRecord", "classify", "renderPage", "animatePageOut", "startViewTransition", "finished", "animatePageIn", "aborted", "skipPopStateHandling", "back", "skip", "replaceContent", "_incomingDocument$que", "incomingDocument", "title", "querySelector", "innerText", "persistedElements", "currentEl", "incomingEl", "replaceWith", "cloneNode", "existing", "replacement", "scrollToContent", "behavior", "scrollTarget", "scrolled", "anchor", "scrollIntoView", "scrollTo", "top", "left", "nextTick", "isSameResolvedUrl", "getCurrentUrl", "use", "plugin", "maybeInvalidPlugin", "isSwupPlugin", "_checkRequirements", "_beforeMount", "mount", "plugins", "unuse", "pluginOrName", "findPlugin", "unmount", "_afterUnmount", "p", "find", "String", "resolveUrl", "url1", "url2", "defaults", "animateHistoryBrowsing", "ignoreVisit", "linkSelector", "linkToSelf", "requestHeaders", "Accept", "_event$state", "source", "Swup", "currentPageUrl", "_window$history$state", "_window$history$state2", "version", "href", "clickDelegate", "log", "delegateEvent", "handleLinkClick", "bind", "handlePopState", "Cache", "enable", "_window$history$state3", "scrollRestoration", "Object", "entries", "documentElement", "toggle", "destroy", "origin", "triggerWillOpenNewWindow", "delegateTarget", "fromElement", "preventDefault", "metaKey", "ctrlKey", "shiftKey", "altKey", "button", "_visit$from$url", "_event$state$url", "_event$state2", "_event$state$index", "_event$state3", "triggerEl", "matches"]
}
